<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>斑桜の桜海~</title><link>https://tinyadapter.com/</link><description>Recent content on 斑桜の桜海~</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 19 Mar 2024 10:29:39 +0800</lastBuildDate><atom:link href="https://tinyadapter.com/index.xml" rel="self" type="application/rss+xml"/><item><title>「工具化」和「反游戏化」思维的力量</title><link>https://tinyadapter.com/post/society/instrumentalization-and-antigamification/</link><pubDate>Tue, 28 Jul 2020 14:37:02 +0000</pubDate><guid>https://tinyadapter.com/post/society/instrumentalization-and-antigamification/</guid><description>&lt;img src="https://tinyadapter.com/cover/1.png" alt="Featured image of post 「工具化」和「反游戏化」思维的力量" />&lt;blockquote>
&lt;p>如果这个功能消失了，你还会使用它么？&lt;/p>
&lt;/blockquote>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;em>惊闻 bilibili 直播粉丝牌系统改版，深感遗憾。虽然我们未曾有过交集（真的），但陈睿恰烂钱无下限的行为，跟六小龄童是一样的。今年下半年……&lt;/em>&lt;/p>
&lt;p>好了不玩梗了。相信常看 bilibili 直播的朋友应该都知道阿 B 粉丝牌系统改版一事了。目前这件事的影响还尚在观察之中，因为有好几个圈内直播消费频次比较高的用户（我个人不是很喜欢「石油佬」这个词，所以暂且不用）对改版一事表现出极大的厌恶，并且誓言要停止消费行为，所以我倒是挺好奇这事最终会如何收场。&lt;/p>
&lt;p>不过，身为一个常年习惯「工具化」思考事物的人，虽然我在情感上支持反对改版的人用实际行动向阿 B 发难，但理性来说确实很难对此事造成的影响产生共情。刚好，借着此事，我想把自己目前总结的一些针对资本主义商业用「游戏化」奴役「数字劳工」的方法论挑明，让更多的人清醒地意识到，要学会洞察资本用温情脉脉的迷雾掩盖着的吃人的本质。&lt;/p>
&lt;p>P.S.: 本文所指的「工具化（instrumentalization）」不是哲学中指代的那个「工具主义（instrumentalism）」，而是指一种将一切事物看作可为己用的工具的一种思考方式。另外，作为一个人，我反对将人工具化的思维。不过，既然商业本来就不是人（双关），冷血一点对待它总归是好的。&lt;/p>
&lt;h2 id="工具化思维">「工具化」思维&lt;/h2>
&lt;p>上文提到，「工具化」就是指以「我正在使用的物品仅仅是一个工具，而不是什么别的其它东西」为思考、判断、进而行动的根本前提。一旦确认了这样的前提，就可以用投入产出比和沉没成本等商业逻辑去破解其自身创造的虚假幻象。正所谓「以己之矛，攻己之盾」。&lt;/p>
&lt;p>举个例子。我们把 bilibili 直播的直播功能作为一个工具：&lt;/p>
&lt;ul>
&lt;li>它完成了怎样的任务？ - 分发视频流&lt;/li>
&lt;li>你为什么要使用它？ - 因为分发的视频流中有自己喜欢的内容&lt;/li>
&lt;li>如果这个功能消失了，你还会使用它么？ - 绝对不可能&lt;/li>
&lt;/ul>
&lt;p>好，那么 bilibili 直播的「直播」功能就是这个产品对我而言的核心功能。&lt;/p>
&lt;p>同样的，对（改版之前的） bilibili 直播的粉丝牌系统而言：&lt;/p>
&lt;ul>
&lt;li>它完成了怎样的任务？ - 展示自己是某些 UP 的观众&lt;/li>
&lt;li>你为什么要使用它？ - 展示自己是某些 UP 的观众；高等级（可能）可以作为对该 UP 长期关注的象征（之所以说可能，是因为潜在的刷等级工具事实上削弱了这一象征作用）&lt;/li>
&lt;li>如果这个功能&lt;strong>消失&lt;/strong>（重复一遍，是消失）了，你还会使用它么？ - 会&lt;/li>
&lt;/ul>
&lt;p>那么粉丝牌系统对我而言就只能算是一个可有可无的边缘系统。&lt;/p>
&lt;p>当然了，肯定有些朋友对这个系统看得很重（不然不能对改版产生这么大的情绪），这是价值观上的分歧，暂且按下不表。不过我还是想说，就算在这件事上你觉得自己对牌子所付出的努力值得，学会了「工具化」思维，最起码能在其它事情上帮你省下一部分被平台骗掉的钱，不是么？&lt;/p>
&lt;h2 id="顺理成章反游戏化思维">顺理成章：「反游戏化」思维&lt;/h2>
&lt;p>如果你理解了上面我所说的，那么恭喜你，已经比绝大多数稀里糊涂交出自己（或父母）辛辛苦苦赚来的钱的人要理性得多了。&lt;/p>
&lt;p>那么我再进一步说点更真实的。如果你细心观察中国互联网行业，就会发现事实上大多数&lt;strong>核心功能不赚钱&lt;/strong>的中国互联网企业都是在靠游戏维持——腾讯、网易、bilibili……&lt;/p>
&lt;p>这种巧合当然不是偶然。游戏为什么赚钱？因为利用了人性中攀比、急功近利、群体无意识等弱点。而真正可怕的一点在于，这种利用人性弱点的「游戏化」产品，正在变得越来越多，比如近几年能够在阿里对中国电商绝对垄断的市场环境下异军突起的拼多多，以及阿里学来的支付宝 APP 里的那堆奇奇怪怪的小游戏。&lt;/p>
&lt;p>看看你 B 直播中那些花里胡哨却又不影响直播功能的，带有一些你也说不清到底有啥用的奖励的系统，「游戏化」的身影昭然若揭。&lt;/p>
&lt;p>别说那些东西又不要你花钱。&lt;/p>
&lt;blockquote>
&lt;p>时间就是金钱，我的朋友。&lt;/p>
&lt;/blockquote>
&lt;h2 id="锻炼工具化思维的方法论">锻炼「工具化」思维的方法论&lt;/h2>
&lt;p>这就是「游戏化」最狡猾的地方——偷换概念。明明这个系统不影响核心功能，但却要通过一系列的包装，使用户在不断的参与过程中产生沉没成本，也就是所谓的「它消失后怎样」。&lt;/p>
&lt;p>因此，破解「游戏化」神话，保护自己核心资产的方法也就很简单了——一切向「工具化」看齐，将所有真真假假、虚虚实实的商业产品视作工具，之后思考自己是否需要这些「工具」。&lt;/p>
&lt;p>打个比方，QQ 作为一个工具，功能满足的根本需要在于「交流」，无论是文字、图片、视频、音频还是文件，都是起到「交换信息」的作用。那么 QQ 这个软件所有不影响核心功能的付费点就显得可有可无了，虽然确实有很多很炫的特权，但这对「交流」毫无作用甚至会产生负面影响（太花哨的文本框影响文字的显示）。&lt;/p>
&lt;p>同样地，如果你熟练运用工具化思维思考问题，那么甚至那些不花钱但耗费你时间的活动、任务，都无法在你身上产生分毫剩余价值。将时间同样看作成本后，你自然会顺着逻辑寻找到真正值得付出的。&lt;/p>
&lt;p>提供一点具体的思考模式：&lt;/p>
&lt;h3 id="如果某个产品只剩下一个功能你希望这个功能是什么">如果某个产品只剩下一个功能，你希望这个功能是什么？&lt;/h3>
&lt;p>回答这个问题有助于你找到真正需要的核心功能。我相信没有什么产品是存在两个核心功能的，如果有，那么这两个核心功能一定可以用一个更大范围的词概括。&lt;/p>
&lt;p>找到核心功能，那么其它不影响核心功能，但却需要你为之思考、行动、甚至花钱的行为，别管它吹得天花乱坠，看都不要看一眼。&lt;/p>
&lt;h3 id="如果某个产品的核心功能不再你能不能找到其它满足自身同等需要的产品">如果某个产品的核心功能不再，你能不能找到其它满足自身同等需要的产品？&lt;/h3>
&lt;p>考察这点的目的在于，让自己认清对某一特定产品的依赖性，从而开始着手寻找替代性产品，以防止前述产品出现主客观变故（如产品停止服务、涨价、系统变更）时影响自己的正常生活。&lt;/p>
&lt;p>就算某一产品确实处于事实上的垄断地位，无法被替代，早早认清这个现实也有助于自己主动减少对产品核心功能的依赖，尽量减少损失。比如（仅对中国用户而言）， A 站之于 B 站、微博之于 QQ（别笑，论功能微博确实能代替 QQ，甚至任何通用论坛、社区都可以）。&lt;/p>
&lt;p>毕竟，重要的是人，是你，而不是某个恶心人的资本产物。&lt;/p>
&lt;h2 id="后记工具化思维从哪来">后记：「工具化」思维从哪来&lt;/h2>
&lt;p>如果你前几年混过一些小圈子，可能就会知道这种终日活在产品稳定性陷阱中的感受是什么样子的。&lt;/p>
&lt;p>小圈子最大的坏处就在于不稳定。不论是平台自身还是依附于平台之上的人，转移阵地可谓家常便饭，这导致几乎每个人都是一种「用完即走」的态度，对提供内容发布的平台本身没有任何的留恋，甚至对平台摆出的吸引用户驻留的姿态都会产生明显的警惕。&lt;/p>
&lt;p>虽然这种 PTSD 式的反应显得有些过于敏感，但经济学还讲究理性自然人利益最大化假设呢，「工具化」思维恰恰足够理性，足够利益最大化。&lt;/p>
&lt;p>果然还是真实的社会最教育人（望天）&lt;/p></description></item><item><title>「饭圈化」迷思</title><link>https://tinyadapter.com/post/society/the-myth-of-circle-of-fans/</link><pubDate>Mon, 27 Apr 2020 21:52:23 +0000</pubDate><guid>https://tinyadapter.com/post/society/the-myth-of-circle-of-fans/</guid><description>&lt;img src="https://tinyadapter.com/cover/3.png" alt="Featured image of post 「饭圈化」迷思" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>话说昨晚看张京华直播的时候，京华说他最近想买个新的备用机（这事当天直播之前也发在他的 Twitter 上了，不过显然没有直播时候提起带来的影响力大）。当时一听到他说这件事的时候，我就心想「完了」，毕竟最近中国拥有手机制造业务的各家公司之间的战争逐渐白热化，到时候弹幕里肯定又是一阵腥风血雨。&lt;/p>
&lt;p>事实证明我没猜错，在京华讨论手机问题的这段时间内弹幕明显变多，且气氛确实比较怪异，不过总体而言还好，起码没有大量贬低竞争对手的言论出现，还算是在就事论事地针对京华提到的各个考虑因素进行着推荐（中途提到 8848 以及罗老师的锤子手机的弹幕我就全当他们在玩梗，暂且忽略不计）。&lt;/p>
&lt;p>当然，真正引起我兴趣的并不是讨论手机问题这件事本身，而是在京华准备下播时，有弹幕建议他以后最好不要在直播提手机的发言，当时的原话大概是：&lt;/p>
&lt;blockquote>
&lt;p>「现在手机圈也饭圈化了」&lt;/p>
&lt;/blockquote>
&lt;p>一看到这条弹幕，我顿时就想起了最近甚嚣尘上的「V 圈饭圈化」类似言论。仔细一想，现如今各家手机公司之间的高管和粉丝互怼的行为，确确实实也算作一种「饭圈化」的特征。而至于说真正的饭圈如何，相信大家现在也有所感受。&lt;/p>
&lt;p>那么问题来了，当我们在讨论「饭圈化」的时候，我们在讨论什么？&lt;/p>
&lt;h2 id="饭圈化时代">「饭圈化」时代&lt;/h2>
&lt;p>显然，V 圈（起码大多数时候）不是饭圈，手机行业更是完完全全跟饭圈沾不上关系。所谓「饭圈化」肯定不是指这些行业的所有从业人员都变成了偶像，而是针对这些行业所面对的受众的评价体系。&lt;/p>
&lt;p>如果要正式点为这个词下一个定义的话，「饭圈化」就是指某一行业的受众自发或被动地成为该从业人员/公司的粉丝，而因其对该从业人员/公司形象的维护所产生一系列在外界看来负面的行为，使得干扰或影响到了不熟悉或不关心该从业人员/公司的普通群众的正常生活的现象。这里的「自发或被动」同时包含了花钱买粉丝和自愿成为粉丝两种情形；「外界」和「普通群众」则均为不了解该从业人员/公司的人员，因此既可以指非社群参与者也可以指不知晓这一个体的社群真实参与者；而「该从业人员/公司」指代的是整个社群中的每一个独立个体而非整个社群，因此不仅是社群内对社群外的影响，在社群内部产生的粉丝间对喷、互相干扰的行为也可以算作「饭圈化」的一个标志。&lt;/p>
&lt;p>好了，接下来我们举些现实点的例子。首先是京华昨晚的直播。当京华说要一台新的备用机的时候，其实说明他是不处于任何一家手机公司粉丝状态的「普通群众」（不然就不会在直播里求建议）。而如果弹幕里推荐产品的时候超越了产品好的一面，演变为互相揭露竞争对手产品甚至公司坏的一面的行为的话，那么这一负面行为就使得京华这位「普通群众」无法做出判断，因而达成了「饭圈化」的结果。同样地，在某一无关的视频下面刷 V 来看过这个视频；V 圈中互相的 CP 之争（特指在没有提到 CP 中所有人的场合产生的争论），诸如此类的行为，都可以被「饭圈化」这三个字总结。&lt;/p>
&lt;p>当然，昨晚的情况看起来还好。但如果以上面的定义来看，手机行业目前「饭圈化」的现象可是实打实的，它不影响昨晚的京华，但是影响了很多其他的「普通群众」。&lt;/p>
&lt;p>那么这种在各行各业悄然发生的「饭圈化」倾向，究竟是怎么来的呢？总不能是这些以前混饭圈的粉丝现在都跑去鼓捣手机，看 VTubers 了，从而把饭圈那一套带到了其它各行各业吧？&lt;/p>
&lt;p>我认为，目前产生的这种倾向，是资本的主动引导和粉丝的自甘堕落相互叠加而产生的巨大破坏力在如今疫情阴影笼罩未来下的集中释放。&lt;/p>
&lt;h2 id="2018-年---2020-年">2018 年 -&amp;gt; 2020 年&lt;/h2>
&lt;p>说起这个，就让我想起赵皓阳老师曾经发过的一篇文章《关于年轻人“粉圈现象”和“追星行为”的心理学研究》，其中着重提到了他朋友对粉丝追星的心理学原因的研究：一个是「宗教崇拜」，一个是「母性」。其中主要归结的原因就是「母性」，而这基于的假设也是饭圈中参与打榜、控评、引战的男女性别比例。&lt;/p>
&lt;p>赵老师发表这篇文章的时间是 2018 年 11 月。现在的情况显然和当初又有些不一样了。一方面，在其它产生「饭圈化」倾向的领域，并不存在女性多数这种假设前提。相反，起码 V 圈和手机圈显然是由男性主导的社群体系。在这种假设不成立的情况下，想要把产生原因归结为其推论的「母性」就变得十分困难起来。另一方面，赵老师对饭圈中严密的组织结构进行了赞扬，表明了谨慎乐观的态度：&lt;/p>
&lt;blockquote>
&lt;p>因此，为什么这些粉丝组织让我眼前一亮，意味着年轻人还是可以组织起来的，她们的自组织依然高效与先进。她们为爱豆义务宣传，也同样可以为更高的信仰来义务宣传；她们捐钱给爱豆买广告、给剧组工作人员送礼，也同样可以为更高尚的目标去奉献。虽然条件苛刻了一些、操作难度大了一些，但原子化时代的年轻人，依然有团结起来的潜质。&lt;/p>
&lt;p>——赵皓阳《关于年轻人“粉圈现象”和“追星行为”的心理学研究》&lt;/p>
&lt;/blockquote>
&lt;p>不过我对此表示悲观，至于具体原因一会再说。&lt;/p>
&lt;p>这倒不是说对赵老师的文章有什么批评。如果我们将时间点倒退回 18 年底的话，那个时候的饭圈还尚未展现出现如今的那种强大的破坏力和「出圈效应」（两者都是指坏的层面），而其他各领域也没有如今这么明显的「饭圈化」趋势，而这些事实论据也并没有因为时代发生了变化而变得无意义，只是需要针对当下的现实重新思考一个全新的现象产生的原因。&lt;/p>
&lt;p>马后炮是一个经典而常见的逻辑陷阱。这并不可取。&lt;/p>
&lt;p>那么如今我们终究是走到这一步了，接下来再做的分析就必须要跳脱曾经预想的以性别作为划分的心理学分析，转为更加泛化的、基于更高维度视角的假设。&lt;/p>
&lt;p>我以两个假设作为目前各行各业「饭圈化」的论点。接下来先说第一个。&lt;/p>
&lt;h2 id="粉丝经济对于资本的价值">「粉丝经济」对于资本的价值&lt;/h2>
&lt;p>如果说在分析其它行业的时候真有什么饭圈现状可以借鉴的，那么就是其所谓「粉丝经济」发源地的理论价值。而饭圈语境下的粉丝，就是资本高度异化行业受众之后的产物。&lt;/p>
&lt;p>学过马克思主义的都知道，资本存在着对人的异化效应。所谓「异化」，就是人的物质生产与精神生产及其产品变成异己力量，反过来统治人的一种社会现象。消费主义就是一种典型的异化现象，在消费主义诞生之前，商品作为一种物质，客观上有作为评价一个人社会身份与社会地位依据的可能。注意，这本身是一种正向的理解，是没有问题的。在异化发生之前，富人花大价钱消费高端商品，本身确实代表着其一定的身份（因为只有有钱才能支撑起高消费）。但是，消费主义为这种关联做了一个反向的解读。在其语境下，一个人社会身份和社会地位可以通过其消费的商品来获得（所谓「你拥有什么样的商品，你就是什么样的人」）。在这种情况下，那些本身社会地位不高的人，强行通过超前消费试图抬升自己在他人眼中的地位，最终被消费主义所异化，完成了被资本的「规训」。&lt;/p>
&lt;p>而在「粉丝经济」中，这种异化再次显现出它的威力。明星作为资本的产物，资本将其塑造成一个可以由粉丝进行培养的容器。粉丝通过与其互动，消耗时间和金钱获得一种心理上的满足感。在正向的理解中，粉丝是明星的「衣食父母」，粉丝在两者的关系中显然拥有着较高的地位；而资本创造了这样一个反向解读的景观：「你粉什么样的明星，你就是什么样的人」，明星作为资本创造的一种「商品」，却反过来支配了粉丝的行为。那些狂热的粉丝在参与偶像的活动，为偶像打榜、控评、对喷时，事实上已经付出了超出其获得的满足感所对应的代价（参考边际效益理论，明星的边际效益在互联网环境下无限接近于零），从而被资本攫取了超额利润。&lt;/p>
&lt;p>这段分析对于资本介入较多的手机行业是可以被借鉴的。拥有手机制造业务的公司所生产的手机这一商品被消费者购买并使用，其过程本身甚至不存在任何的关联性，而只是一个单纯的消费行为。但手机公司通过资本运作下的话题炒作，强行添加了一个新的景观：「制造你使用的手机的公司什么样，你就是什么样的人」。在这种流氓逻辑下，手机公司的宣传和互相贬低成为了搅动粉丝互喷和维护自家公司的事实依据。这种塑造「偶像」的行为使得手机这一本来在消费过程中重中之重的商品反而成为次要因素。手机公司的粉丝互相挖竞争对手的黑料，为一个企业强行添加人格化因素，因为一家企业过去所做过的一两件坏事全然否定其现在的全部产品，却不再在意公司生产的手机本身。在这个过程中，这些粉丝始终相信公司和商品之间永久的关联性，从而被资本好好地薅了一把羊毛。&lt;/p>
&lt;p>然而，这个论点对 V 圈，或者其它资本介入度不高的行业却不能成立。在这些行业中，即使有可能有一些迁移而来的异化思想，但缺少资本的引导，这种事实上不合逻辑的联系只能在小范围内传播，无法影响社群内的大多数人。&lt;/p>
&lt;p>因此，另一个论点就登场了。而这个论点也是为何我对各个行业最终完全「饭圈化」抱有悲观心态的原因。&lt;/p>
&lt;h2 id="人类认知心理的路径依赖问题">人类认知心理的路径依赖问题&lt;/h2>
&lt;p>咱不废话，直接贴一段文献过来（另外这篇论文本身也不错，值得一看）：&lt;/p>
&lt;blockquote>
&lt;p>同化与调适是两个相互依存和补充的认知机制,但并非对于任何主体来说,在任何条件下,两者都处于完全平衡的状态。正如皮亚杰所指出的:“当同化胜过顺化时,就会出现自我中心主义的思想”。这一论断表明,过强的同化倾向会造成主体在认知过程中的自我中心,导致主体对客体新事物的盲目排斥和同化,造成认知的不客观。[1]&lt;/p>
&lt;/blockquote>
&lt;p>翻译成人话就是，当一个人遇到了和自己想象中不同的情况（需要新的认知）时，过强的相信自己既往判断（同化）的心理胜过了接受客观现实（调适）的心理，从而变得无法接受现实。&lt;/p>
&lt;p>不幸的是，根据过往的研究结果，绝大多数人类在面对上面这种情况时，都会不自主的进行同化而非调适。简单来说，就是太过相信自己的判断。&lt;/p>
&lt;p>如果这种自我欺骗可以被总结为一种客观存在的「人性」的话，那么任何面向大众的行业都会最终走向「饭圈化」，因为大多数人的行动本身就符合「饭圈化」的定义。加之互联网的匿名特性，最终会导致整个网络化社群环境的大滑坡。&lt;/p>
&lt;p>半佛老师前几天专门发过一篇文章探讨 B 站现状的问题，这里摘一段以供论述：&lt;/p>
&lt;blockquote>
&lt;p>任何一个网络社区，人越多，就越接近真实的互联网状态，而互联网的匿名性质导致的就是喷人成本低，人可以肆无忌惮的发泄自己心中的黑暗。&lt;/p>
&lt;p>——半佛仙人《年轻人是机遇，也是 B 站的挑战》&lt;/p>
&lt;/blockquote>
&lt;p>而这种黑暗的终极形态就是所谓「垃圾人定律」[2]，具体的话太难听就不说了，有兴趣的可以自己去查。&lt;/p>
&lt;p>目前来看，这种互联网下的社群发展特性就算资本不介入，最终也会自行产生与发展。目前的 V 圈，或者其它任何一个正在处于其影响力扩张期的小社群，都比较符合这种情况。&lt;/p>
&lt;p>说到底，他们真正想维护的不是偶像，而是自己喜欢偶像这件事本身。就算这个被依附的对象不是偶像，也可能是一家公司、一支股票、一种美食、一份职业……&lt;/p>
&lt;p>说到底还是在维护自己。&lt;/p>
&lt;h2 id="如何破除自我缺陷">如何破除自我缺陷&lt;/h2>
&lt;p>说起来还是很简单的，但显然做比说要难得多。&lt;/p>
&lt;p>人要达到不断进步的过程，最需要保持的优秀特质是什么？窃以为就是四个字「实事求是」。对就是对，错就是错，如果一个人对某一事物的批评是出于事实而非臆测，那就好好调用大脑中负责「调适」的细胞，乖乖接受它就好了。&lt;/p>
&lt;p>实事求是还有另一个好处，就是破除资本为异化人类塑造而的景观效应。如果一个人能够回归常识，自然就能得出消费水平决定不了社会地位这一浅显易懂的道理。现代人类的智商都是差不多的，理论上不存在谁比谁更聪明的情况。既然创造景观的资本代言人懂得这个道理，任何一个正常人同样可以得出相同的结论。&lt;/p>
&lt;p>但就像我说的，实事求是这件事做起来有多难，我自己也是有太多体会在其中的。至于说如何尽自己所能接近这个理想态，那还是最简单的几点：多看，多听，多思考。任何一件事想要成立，都是需要一定的条件的。看到一件事物，多想想它为什么是现在这个样子，多往下深入几层。&lt;/p>
&lt;h2 id="后记">后记&lt;/h2>
&lt;p>说回京华买备用机的问题。如果要我做推荐的话，只要能躲开中国的手机厂商，就不会被国内手机圈乌烟瘴气的气氛所影响。&lt;/p>
&lt;p>这很无奈，但就是目前最靠谱的建议。&lt;/p>
&lt;h2 id="参考文献">参考文献&lt;/h2>
&lt;p>[1] 高姗姗,陈博.路径依赖的认知心理学分析[J].管理观察,2009(24):245-246.&lt;/p>
&lt;p>[2] Pollay, D. J. (2010). The Law of the Garbage Truck: How to Respond to People who Dump on You, and how to Stop Dumping on Others. Hachette Audio.&lt;/p></description></item><item><title>由ぺこら事件而生的公共关系思考</title><link>https://tinyadapter.com/post/vtubers/pr-thinking-from-pekora-incident/</link><pubDate>Wed, 15 Apr 2020 23:20:01 +0000</pubDate><guid>https://tinyadapter.com/post/vtubers/pr-thinking-from-pekora-incident/</guid><description>&lt;img src="https://tinyadapter.com/cover/5.png" alt="Featured image of post 由ぺこら事件而生的公共关系思考" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>说真的，我是没想到时隔一年多的博客更新居然会是以这种神奇的方式展开。&lt;/p>
&lt;p>说起来也许是一种巧合吧，刚好论文在距离 deadline 还剩几天的前夕完成了第三版，刚通过邮件发给教授，想着趁没回复之前休息一下刷刷 V，结果就让我顺着ぺこら最新的熟肉刷到了这起事件。&lt;/p>
&lt;p>作为一个刚刚成为 DD 仅三个月的，加之最近因为论文的原因没怎么看 V，本身也几乎不追日 V 直播只看录播的自闭观众，我把ぺこら从昨天到目前 Twitter 道歉动态翻译的几条关键动态包括下面高赞的评论看了个遍，大概理解了事情的前后关系。&lt;/p>
&lt;p>导火索自然是ぺこら在 Twitter 上转发了几个 niconico 无断转载 bilibili 的二创视频这件事，随后又因为一系列旧账新算发展到了讨论诸如字幕组地位问题、hololive 成员的 B 限问题、字幕组与 hololive 本社关系问题等一系列话题。并且我也在其中发现了不少针对字幕组在此期间控评问题的讨论，可能间接成为了导致战线扩大的原因之一。&lt;/p>
&lt;p>我对这起事件及其所引发的全部范围内的争议当然有着自己的立场，不过这不是本文想要探讨的重点。如果真的有对此感兴趣的人，我会在文章最后一小节单独留一部分阐述带有自己主观色彩的评论，不喜的到时候可以直接跳过。另外我本身也只是一个普通的一般通过 DD，专业是跟工商/市场/公共关系之类八竿子打不着的计算机，本身肯定不会有什么专业水平，对文章内容有任何不认同的地方欢迎留言讨论。&lt;/p>
&lt;p>想到哪里写哪里吧，之后视情况会对文章内容进行整理与修改的。&lt;/p>
&lt;h2 id="本社字幕组与观众">本社，字幕组与观众&lt;/h2>
&lt;p>对这些讨论内容及讨论者本身的立场我不做任何评论，因为这其中涉及到价值观的问题，如果仅仅局限在争论话题本身那么是无法达成任何共识的。但我却在翻看这些留言的途中想到了一件有趣的事情：字幕组，或者说 hololive 本社究竟要如何应对这种「意外情况」？&lt;/p>
&lt;p>这本身并不是一个老调重弹的公共关系（公关）话题，相信能够理解目前 V 圈正在发生的不同于以往公关所涉及的背景的读者应该对此有所察觉。而这其中最主要的特殊点就是两个直播/视频平台之间内容和观众之间鸿沟的存在。作为将 YouTube 视为主要战场的 hololive 成员或者其他日本 VTubers，面对着既有视频又有直播，与 YouTube 目前的身份几乎一致，但语言环境、收益规则和文化氛围不同的 bilibili 平台，究竟要如何处理，这显然不仅仅是 COVER 一家会社的问题。如果不能很好地把握，显然会导致一系列不必要的麻烦。&lt;/p>
&lt;p>但直到目前这又是一个很棘手的问题，也是我为「意外情况」这四个字打了引号的原因。事件后续的讨论的内容其实根本就不是什么意外，而是早就成为一个个虽困难但又亟待解决的老大难问题。过去观众可以假装这些问题不存在，字幕组可以假装这些问题不存在，hololive 本社亦可以假装这些问题不存在。但现在由于一系列各种各样的导火索，观众率先打破沉默对这些问题发难，作为这三角关系中的另外两者如果不能及时回应，后续必然会发生许多更加难以解决的问题。&lt;/p>
&lt;p>对于一个日本的 V 而言，想要在中国市场进行发展，字幕组显然是绕不开的话题。这点个人势面对着没有形象包袱的平台和直接利益相关的观众，尚且可以做出理解与平衡；但企业势是商业机构，旗下 VTuber 成员事实上涉及会社本身的形象，做得不好的话很难说不被扩大化到机构问题（事实上讨论中早已出现了这种势头）。当然，COVER 的特点导致其并不类似一个中国语境下的「直播公会」，但是这并不妨碍不了解运营，只看 V 本身的一般观众联想。&lt;/p>
&lt;h2 id="思考一个好公关的特性">思考：一个好公关的特性&lt;/h2>
&lt;p>公共关系是一个古老的存在，其最早可以追溯到 20 世纪早期：&lt;/p>
&lt;blockquote>
&lt;p>Public relations is a management function, which tabulates public attitudes, defines the policies, procedures and interests of an organization&amp;hellip;followed by executing a program of action to earn public understanding and acceptance. [1]&lt;/p>
&lt;p>公共关系是一种管理职能，它搜集公众的态度，规定一个组织的政策、程序和利益……然后执行一项行动计划，以赢得公众的理解和接受。&lt;/p>
&lt;/blockquote>
&lt;p>不过，身处互联网时代 &amp;amp; 社交媒体时代的我们这群人，显然对公关这件事有着自己不同的看法，而这点从目前各种针对年轻人的公关翻车事件中可见一斑。&lt;/p>
&lt;p>这不是我瞎编的，随便在图书馆搜了一本书，导言部分就列举了一些社交媒体语境下错误的公关做法：&lt;/p>
&lt;blockquote>
&lt;p>It also examines the key transgressions committed by practitioners: the paucity of digital literacy, a widespread lack of understanding of the norms of social media, a naivety about the corporate identity risks, and a prevalent emphasis on spin and persuasion rather than on authentic engagement. [2]&lt;/p>
&lt;p>它还考察了从业人员的主要过错行为：缺乏数字素养，普遍缺乏对社交媒体规范的理解，对企业身份风险的天真，以及对宣传和说服而非真实参与的普遍强调。&lt;/p>
&lt;/blockquote>
&lt;p>窃以为，对新生代群体而言，其中影响最大的部分恰恰在于最后一点，即「对宣传和说服而非真实参与的普遍强调」。&lt;/p>
&lt;p>什么是一个好的公关？这里仅仅表达我思考后的结果。一个好的公关，无外乎&lt;/p>
&lt;ul>
&lt;li>公开。这对应上文「非宣传和说服」的部分。针对声量大、关注度高的质疑，一定要做出回应，哪怕是说明因自身的困难导致问题无法解决。公开且真诚的回应尤其会增加路人的好感度。&lt;/li>
&lt;li>及时。这对应上文「真实参与」的部分。一个带给观众良好参与感的事情一定是能够得到及时回应的事情。&lt;/li>
&lt;/ul>
&lt;p>而字幕组也许又是三角关系中最难平衡的部分。一方面，不知情的观众可能会将其行为与 V 或者会社本身划等号；另一方面，会社既很难无视这部分桥梁人员，又不知道该如何让出部分利益来供养他们，间接导致字幕组成为了两边受气的存在。&lt;/p>
&lt;p>当然这些其实都没什么大不了的，相信任何一方都可以对此表示理解（否则目前这种看起来平衡的关系早就分崩离析了）。反倒是我上一节所说的两点好公关特性，字幕组是天然无法做到的：&lt;/p>
&lt;ul>
&lt;li>字幕组出于对 V 形象的保护以及会社商业利益的尊重，不能擅自代替 V 或者会社对某一具体事件做出回应。如果 V 或会社最终决定冷处理，那么字幕组成员也只能选择无条件接受。&lt;/li>
&lt;li>字幕组或是因为地位问题，或是因为成员空闲时间问题，无法做到及时与 V 和会社运营人员沟通。这会拖慢可能存在的对突发事件的具体回应。&lt;/li>
&lt;/ul>
&lt;p>不过，作为同属于一个文化圈，又直接面对观众的群体，字幕组又是不得不成为潜在的公关者的存在。我们不能强求一个字幕组拥有强大的公关技巧（也显然做不到），但如果处理不当，显然会导致不必要的事态扩大。不求解决好，但求不添乱，就是应对突发事件最好的手段。&lt;/p>
&lt;p>那么究竟要如何做到呢？&lt;/p>
&lt;h2 id="一些可能的兔组公关解决方案示例">一些可能的兔组公关解决方案示例&lt;/h2>
&lt;p>其实也没什么好说的，我要说的都浓缩在「公开」「及时」这两个词中了。接下来就从高赞回答中举几个争论点以及兔组可能的公关应对方法。&lt;/p>
&lt;p>首先明确一个大的方向。目前在这起事件中产生的质疑主要分为两个部分：一部分是关于 hololive 成员字幕组本身的问题，这部分兔组结合自身实际是可以作出回答的；另一部分是关于 V 个人行为及其背后会社可能的运营问题，这部分兔组自身无法作答，有待 V 或者 hololive 本社作出回应。对于这两种问题，解决方案显然是不同的。大致思路如下：&lt;/p>
&lt;ul>
&lt;li>对可以很快做出回应的字幕组自身问题，及时做出严肃、理性且有效的回答。&lt;/li>
&lt;li>对不能很快做出回应的字幕组自身问题（例如出于收集组内数据的需要），首先做好「占位符」，即直接说明影响直接回应的因素，并承诺后续将在完成相应操作的情况下及时公开回应。&lt;/li>
&lt;li>对 V 个人行为及其背后会社可能的运营问题，同样做好「占位符」，并尽快汇总报告运营，起码尽量减轻又自己方导致的时延效应。&lt;/li>
&lt;/ul>
&lt;p>为什么我一再强调「占位符」的重要性？因为在「公开」无法满足的客观条件下，「及时」显得更加急迫与关键。同时此类回应能很快打消不必要的猜测和联想，结合自身试图好好解决问题的态度，也使得刻意煽动之人无法达到自己的目的。&lt;/p>
&lt;p>我见过太多酝酿了很久才姗姗来迟的公关文，它们既不能传播至不怎么关心事态的路人（因为已经过了他们关心此事的窗口期），在此之前还无法阻止刻意联想之人的观点发表与传播。而且事实上人们对一件事物一旦形成观点并保持一段时间，就很难再被纠正回来，以至于看到迟到的公关文会首先试图否定其合理性。这点与认知心理学有关，不展开了。&lt;/p>
&lt;p>&lt;strong>当然，我没有能力成为任何字幕组的成员，因此对目前日 V 字幕组运行情况不甚了解，如有任何冒犯，在此表示十分抱歉 m( _ _ )m&lt;/strong>&lt;/p>
&lt;p>接下来逐一举例并探讨兔组可能的应对方案。&lt;/p>
&lt;h3 id="关于字幕组从目前活动中得不到利益的问题">关于字幕组从目前活动中得不到利益的问题&lt;/h3>
&lt;p>这点分为两种情况。如果兔组在组员入组时就明确向组员说明了不会授予其任何利益，则此问题就成为了已经可以解答的问题：得不到利益是确定的，所有参与字幕组的成员都已经对此心知肚明并且接受，如果出现了与此不一致的想法，那么他/她会自行离开。&lt;/p>
&lt;p>当然，如果问题止步于此，可能会有人将矛头指向其背后的会社，对这个目前来看老大难的问题横加指责，而将批评引导至一个短期无法解决的矛盾并不是一个好的公关者希望出现的情况。因此，保险起见，兔组可以以当前时间为基点收集组内所有成员对收益问题的看法。人是会变的生物，有些当年入组时信誓旦旦的组员难免在实际参与活动过程中发生心理变化。而且在搜集过程中要尊重组员的个人想法，不能运用之前可能存在的看待收益的原则，否则就会导致组员不敢说真话。&lt;/p>
&lt;p>搜集这份数据需要时间。在此之前，必须要及时做出如下回应：目前正在收集组员看法，并且在未来会将其公布。&lt;/p>
&lt;p>同时也要说明，这只是兔组自己的情况，避免将战场扩大到整个日 V 字幕组群体。于己于人，这点都是要保证的。&lt;/p>
&lt;h3 id="关于-v-目前对-bilibili-不上心与可能的-b会社利益分配的问题">关于 V 目前对 bilibili 不上心与可能的 B/会社利益分配的问题&lt;/h3>
&lt;p>这点兔组中负责转播/直播管理部分的小组可能知道也可能不知道，甚至 B /会社可能对比有保密协议一类的东西，会社方负责收益对接的流程我也无从知晓，因此不作臆测。&lt;/p>
&lt;p>对这种牵涉太广利益太复杂的议题，公关者可以首先大大方方说明此问题比较复杂，不好做过多回应。不过同时要注意措辞，「会在与各利益相关方沟通讨论，达成一致的基础上适时解释允许公开的部分」就比单单一个「无可奉告」柔和得多。&lt;/p>
&lt;h3 id="关于-v-曾经对-b-限做出承诺结果无法兑现的问题">关于 V 曾经对 B 限做出承诺结果无法兑现的问题&lt;/h3>
&lt;p>这点不由 V 本人出面说明是无法解决问题的。而且事实上 V 有错在先，因此对于公关者来说最不好处理的就是此类问题。&lt;/p>
&lt;p>公关者可以选择尽量争取路人的好感，首先将此事中所有时间节点发生的事做一个梳理（比如我看到一个评论说事实上很多流程耗时过多导致目前拖延 B 限的结果）；同时如果真的确实跟 V /本社没有沟通渠道，那么本质上这成为了目前 hololive 运行现状缺陷的一环，兔组与其隐瞒和护短倒不如直接承认，携着观众对其活动辛劳而又无私的好感作为与本社进一步交涉的筹码。这并不是要挟，而是 hololive 中国运营部分想要更长远的走下去必须做到的，要让本社清楚地认识到这一点。&lt;/p>
&lt;p>&lt;em>没有决策能力是任何一个公关者都会遇到的问题，这点即使在企业也是一样。&lt;/em>&lt;/p>
&lt;h3 id="关于-hololive-cn-的问题">关于 hololive CN 的问题&lt;/h3>
&lt;p>这点可以说跟兔组毫无关系可言，毕竟他们既不是运营也不是 hololive CN 的字幕组。但你必须承认，有时候公关者就是会遇到这种看似跟自己完全无关的问题。&lt;/p>
&lt;p>对于这种情况，摆出一副「雨我无瓜」的态度似乎合理，但其实是大忌。但是又不能对此发表任何先入为主的评论。这时需要换位思考评论者的心态，在此评论一个看似无关的话题实际上很多时候是为了让被评论对象充当「传话者」，让问题传达到其背后的存在。那么选择其实很简单：当，或者不当。当，有了结果便说明；不当，也要说明为何不当。&lt;/p>
&lt;p>&lt;em>在日 V 字幕组的特殊语境下，其实「公关者」这个身份并不是唯一，与本社也并不存在太多利害关系，甚至在对方有求于自己的情况下，适当地提出合理的建议，既是为自己争取更好的存在，也是为了整个大环境着想。&lt;/em>&lt;/p>
&lt;h3 id="总结">总结&lt;/h3>
&lt;p>发现了么？在所有的公关策略中，最重要的基础设施是什么？&lt;/p>
&lt;p>我觉得是有效、快速的沟通渠道。这也是目前日 V 字幕组对接企业势所欠缺的核心点。&lt;/p>
&lt;p>目前 hololive 基本上做到了 V 和本社之间平等的关系（不论是日常活动还是私下透露都能感受得到），但对于字幕组这块，一直悬而未决。&lt;/p>
&lt;p>我是从来不会接受将此上升到两个国家如何如何这种毫无根据的论断的，毕竟 COVER 是商业机构，商业机构的本质是赚钱，对于妨碍他们赚钱的事一定会想尽办法解决。&lt;/p>
&lt;p>中国市场很大，这点 YAGOO 甚至自己都在向同为 V 企业的他社传递。所以我们有理由对字幕组成员和中国观众得到尊重保持谨慎乐观。&lt;/p>
&lt;p>大不了最后事实摆出来真的没那回事，那到时候再炎上也不迟。让子弹飞一会。&lt;/p>
&lt;h2 id="我对整起事件的观点主观注意">我对整起事件的观点（主观注意）&lt;/h2>
&lt;p>与那些只喜欢安静地看整活，享受 V 带来的美好的人不同，我是一个十分关注圈子本身环境的人。这里不是想要拔高自己，只是我的心态确实就是如此。那些单纯喜欢 V，单推也好 DD 也好，我也很欣赏他们的心态。他们是这个圈子保持新鲜与活力不可缺少的一环。&lt;/p>
&lt;p>单纯就这起事件而言，我觉得这是一件好事，起码将很多秘而不宣的事情捅到了台面上来。同样地，怎样处理类似事件可以成为一个好的榜样（抑或是坏的教训），从而决定这个圈子的未来。&lt;/p>
&lt;p>有些时候，时代是不会照顾那些想要逆其而行的人的。确实有很多问题是随着圈子扩大才接踵而至的，但如果因为这点现实就认为只要永远保持自己圈子小众就是解决了这些问题，那么就是单纯的本末倒置。很多类似的小圈子其实都有这种想法，我也有过不少经历，也看见那些圈子不可避免地走向大众，又因而陷入一些问题之中不断内耗致死。自此，才深刻体会到决定一个文化是大众还是小众这件事从来不以个人意志为转移。&lt;/p>
&lt;p>不论最终的结果如何，保持互相尊重理解，而不是追着与自己不同的观点谩骂与对线，终归是好的。V 圈历史遗留问题又复杂又多，各自表达自己的意见就好，为何要在一些短期内无法解决的事情上争吵呢？&lt;/p>
&lt;p>你因为一个机缘巧合进入了 V 圈，想看到的究竟是什么？&lt;/p>
&lt;p>出于自己一身的正义感，逞一时口舌之快，最终影响到自己喜欢的对象和热爱的事物，真的值得么？&lt;/p>
&lt;p>……&lt;/p>
&lt;h2 id="闭幕谢罪">闭幕谢罪&lt;/h2>
&lt;p>讲真，这篇文章还是看过就完了，不要往心里去……&lt;/p>
&lt;p>我越写越觉得我其实写得很不好，果然没有专业知识就是一个外行，如果有有能 man 批评指教就再好不过了。&lt;/p>
&lt;p>（但是又不敢这篇文章被更多人发现，说到底还是一个社恐）&lt;/p>
&lt;p>如果您看到了这里，那么我敬佩您是一个有耐心的人。&lt;/p>
&lt;p>最后祝您身体健康，再见！&lt;/p>
&lt;h2 id="参考文献">参考文献&lt;/h2>
&lt;p>[1] Breakenridge, Deirdre (26 March 2008). PR 2.0: New Media, New Tools, New Audiences. FT Press. ISBN 9780132703970.&lt;/p>
&lt;p>[2] Motion J, Heath RL, Leitch S. Social media and public relations: fake friends and powerful publics. 1st ed. New York: Routledge; 2016.&lt;/p></description></item><item><title>TypeScript + Vue, 防止 TSLint, Vetur, Prettier 打架的 VSCode 配置方式</title><link>https://tinyadapter.com/post/code/typescript-vue-linters-formatters-settings/</link><pubDate>Sat, 16 Mar 2019 10:22:02 +0000</pubDate><guid>https://tinyadapter.com/post/code/typescript-vue-linters-formatters-settings/</guid><description>&lt;img src="https://tinyadapter.com/cover/1.png" alt="Featured image of post TypeScript + Vue, 防止 TSLint, Vetur, Prettier 打架的 VSCode 配置方式" />&lt;p>注：大忙人请直接跳到最后一节哦~&lt;/p>
&lt;p>最近把 Yagt 的代码迁移到了 Standard 风格，就是这个：&lt;/p>
&lt;p>&lt;img src="https://testingcf.jsdelivr.net/gh/standard/standard@master/badge.svg"
loading="lazy"
alt="JavaScript Style Guide"
>&lt;/p>
&lt;p>讲真，这个图标还是有点好看的。&lt;/p>
&lt;p>不过之前项目一直使用开箱即用的 Prettier 插件（甚至连配置文件都没有，直接依赖 VSCode 自带的默认配置），而 Prettier 这个东西一直以「武断」著称，根本就不给你多少配置的空间。&lt;/p>
&lt;p>没办法，只好先关了 Prettier，把 TSLint 装了起来。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>顺带说一句，大概也就前两个月，TypeScript 团队&lt;a class="link" href="https://github.com/Microsoft/TypeScript/issues/29288" target="_blank" rel="noopener"
>宣布使用 ESLint 作为 TypeScript 和 VSCode 仓库的 Linter&lt;/a>，ESLint 那边也表示欢迎，当天就放出了新的 &lt;a class="link" href="https://github.com/typescript-eslint/typescript-eslint" target="_blank" rel="noopener"
>typescript-eslint&lt;/a> 项目。但是两个月后的现在，我在使用 ESLint 检查 TypeScript 代码时依然会遇到一些 BUG，因此这里就暂时依旧用着 TSLint 了。&lt;/p>
&lt;pre tabindex="0">&lt;code>yarn add -D tslint tslint-config-standard
&lt;/code>&lt;/pre>&lt;p>再配置一下 tslint.json 和 tsconfig.json：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//tslint.json
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;extends&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;tslint:recommended&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;tslint-config-standard&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;rules&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;max-line-length&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//有些规则限制太死，先关一关
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nt">&amp;#34;no-var-requires&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;object-literal-sort-keys&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;no-floating-promises&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;forin&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//tsconfig.json
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;compilerOptions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;plugins&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;typescript-tslint-plugin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;configFile&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;tslint.json&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;alwaysShowRuleFailuresAsWarnings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>装好之后，确实出现了不少的警告信息，并且自动修复也能正常工作。但是用着用着，突然发现了一个问题，就是 TSLint 在一行代码超过 80 字符时并不会自动帮你把代码分行（当然，如果 TSLint 抑或是 ESLint 真的能做到这点的话，就不会有 Prettier 这个东西存在了「误」），虽然确实是个小问题，不过对于我这种习惯了什么格式化任务都一个 Ctrl-S 全权交给 Prettier 处理的人来说，确实有点不爽。&lt;/p>
&lt;p>这好办，把 Prettier 装回来不就好了……吗？&lt;/p>
&lt;p>从这里起，事情就开始向着不可控的方向发展了……&lt;/p>
&lt;h2 id="tslint--prettier">TSLint + Prettier&lt;/h2>
&lt;p>启动 Prettier，开启&lt;code>editor.formatOnSave&lt;/code>，然后……&lt;/p>
&lt;p>这不对啊教练，怎么一按 Ctrl-S Prettier 就无视 TSLint 规则把分号又加回去了！&lt;/p>
&lt;p>……哦抱歉，因为 Prettier 是一个「武断」的格式化工具。它才不管你 TSLint 啥规则呢。&lt;/p>
&lt;p>这怎么办呢？&lt;/p>
&lt;p>还好，虽说 Prettier 配置项少得可怜，但是起码还给你了集成 ESLint 和 TSLint 的方式，就是&lt;code>prettier.eslintIntegration&lt;/code>和&lt;code>prettier.tslintIntegration&lt;/code>。&lt;/p>
&lt;p>看来它们还是有一丝良知的嘛，感心感心（佩服佩服）。&lt;/p>
&lt;p>在 VSCode 配置文件里把 Prettier 的 TSLint 集成打开：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;prettier.tslintIntegration&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//启用下面这个VSCode默认的保存时格式化选项，Prettier会覆盖VSCode默认的规则
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="s2">&amp;#34;editor.formatOnSave&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在的情况是：&lt;/p>
&lt;ul>
&lt;li>VSCode::formatOnSave -&amp;gt; Prettier 的格式化器 -&amp;gt; TSLint 的规则&lt;/li>
&lt;/ul>
&lt;p>Ctrl-S 一下，emmm，看起来不错，除了需要多按几次保存之外没啥缺点了。&lt;/p>
&lt;p>打开 Vue 文件，保存一下。&lt;/p>
&lt;p>……&lt;/p>
&lt;p>怎么没反应？&lt;/p>
&lt;p>You gotta be kidding me，原来 TSLint 插件根本没办法访问到 Vue 文件里的&lt;code>&amp;lt;script&amp;gt;&lt;/code>块。&lt;/p>
&lt;h2 id="tslint--tslint-vue--prettier">TSLint + TSLint Vue + Prettier&lt;/h2>
&lt;p>行行行，访问不到也正常，谁让 Vue 单文件组件这么特殊呢。&lt;/p>
&lt;p>商店里搜一波，找到了 TSLint Vue 插件，号称能帮助 lint .vue 文件。&lt;/p>
&lt;p>装上装上。Ctrl-S，┏ (゜ ω ゜)=☞！&lt;/p>
&lt;p>……&lt;/p>
&lt;p>怎么还是没反应？&lt;/p>
&lt;p>难道说不是 TSLint 的问题，而是 Prettier 访问不到.vue？&lt;/p>
&lt;p>好吧，直接说结论。其实不是因为 Prettier 对.vue 失效，Prettier 自身确实无法获取.vue 里的&lt;code>&amp;lt;script&amp;gt;&lt;/code>块，但是 vetur 插件帮我们解决了这个问题。但是 vetur 调用 Prettier 并没有关注它是否继承 TSLint 配置，因此实际上还是 Prettier 默认的规则！&lt;/p>
&lt;h2 id="tslint--tslint-vue--vetur--prettier">TSLint + TSLint Vue + Vetur + Prettier&lt;/h2>
&lt;p>……有点糟糕。这样我们就只能启用&lt;code>tslint.autoFixOnSave&lt;/code>，让 tslint 也参与到保存时的格式化过程中。但是，现在的情况就变成了：&lt;/p>
&lt;ul>
&lt;li>TSLint::autoFixOnSave -&amp;gt; TSLint 的规则（无格式化）&lt;/li>
&lt;li>Vetur::format.defaultFormatter.ts -&amp;gt; Prettier -&amp;gt; Prettier 默认规则（带格式化）&lt;/li>
&lt;/ul>
&lt;p>两个格式化过程之间规则的冲突导致了一个奇葩现象：&lt;/p>
&lt;p>保存 - 分号被加上 - 保存 - 分号被去掉 - 保存 - 分号被加上 ……&lt;/p>
&lt;p>因此最终，只能去掉第三条，也就是在配置文件里加上&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;vetur.format.defaultFormatter.ts&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>来禁用掉 Vetur 对代码的格式化。&lt;/p>
&lt;p>这样，我们还是失去了.vue 文件里代码的自动格式化。不过其实，由于 TSLint 本身也能处理一部分代码不规范的问题，因此只剩下自动换行这件事没有被实现。&lt;/p>
&lt;p>那么问题来了，自动换行究竟是好还是坏呢？因为我目前已经遇到不少案例，Prettier 自动换行将我本就调好的格式给破坏掉了，而我又没办法修正，因为下次保存时又会被改回去。&lt;/p>
&lt;p>但是，自动换行又可以节省人工调整格式的麻烦。毕竟，能自动化的东西为什么还要人手动来搞呢？&lt;/p>
&lt;h2 id="最终的配置文件">最终的配置文件&lt;/h2>
&lt;p>废话不多说。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//settings.json - VSCode配置文件
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;editor.formatOnSave&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;prettier.tslintIntegration&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;tslint.autoFixOnSave&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;typescript.format.enable&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;vetur.format.defaultFormatter.ts&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//tslint.json - 自己想要啥就配啥
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;extends&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;tslint:recommended&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;tslint-config-standard&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;rules&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;max-line-length&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;no-var-requires&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;object-literal-sort-keys&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;no-floating-promises&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;forin&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//tsconfig.json
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;compilerOptions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;plugins&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;typescript-tslint-plugin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;configFile&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;tslint.json&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;alwaysShowRuleFailuresAsWarnings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以上。&lt;/p></description></item><item><title>使用依赖注入，「消灭」单例模式</title><link>https://tinyadapter.com/post/code/di-to-overcome-drawbacks-of-singleton/</link><pubDate>Fri, 15 Mar 2019 19:33:28 +0000</pubDate><guid>https://tinyadapter.com/post/code/di-to-overcome-drawbacks-of-singleton/</guid><description>&lt;img src="https://tinyadapter.com/cover/7.png" alt="Featured image of post 使用依赖注入，「消灭」单例模式" />&lt;h2 id="前言">前言&lt;/h2>
&lt;p>单例模式，作为 GoF 开篇提出的第一个设计模式，因其简单的需求，简单的实现，基本上每个学习过 OOP 的同学都会随手默写一个出来。更不用说如今绝大多数 IDE 都自带的生成 Singleton 类的模板了。&lt;/p>
&lt;p>不过，简单往往意味着粗糙与简陋。根据我个人至今的项目经验（其实也没多少，但足以发现其问题），单例模式保证全局唯一实例的特性确实有着一定的用武之地，但是，初学者们却往往不是以其全局唯一实例的用途为出发点去使用这个模式的，而是将其全局可访问的特性发扬光大了起来。&lt;/p>
&lt;p>这便是单例模式最大的弱点。全局唯一实例总是有着自身的状态（否则，单纯的静态方法便能满足全局可访问性），但是这种状态又因其全局可访问性导致了&lt;strong>全局可修改性&lt;/strong>。而众所周知，全局可修改性意味着接踵而至的依赖关系。任何一个类的任何一个实例都可以反手就是一个&lt;code>XXXClass.getInstance()&lt;/code>与某个单例类建立依赖。随着与单例类建立依赖的类越来越多，整个项目的架构变得混乱不堪，高度耦合。&lt;/p>
&lt;p>在这种错误的应用方式下，单例模式逐渐向着&lt;strong>那个恶魔&lt;/strong>靠近。没错，充其量，不过是&lt;strong>比全局变量好了一点点而已&lt;/strong>。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h2 id="解决方案">解决方案&lt;/h2>
&lt;p>可能有人要问了，既然你把单例模式说得那么坏，那么如果我确实需要全局唯一性怎么办呢？&lt;/p>
&lt;p>这个问题比较好回答。其实单例模式也不是不可以用，只是不能滥用，不能我随便在任何一个地方想调用它就调用它。&lt;/p>
&lt;ol>
&lt;li>完全不符合面向接口编程的思想。因为单例是不能被接口化的（这里不严谨，实际上单例可以让 getInstance 方法返回接口，只是这样没什么卯月，因为调用方的代码已经写死了没法替换），因此只能显式地与某个特定类产生依赖。未来任何对这个类的替换或者扩展都变成了不可能的任务。&lt;/li>
&lt;li>增加了单元测试的编写难度。因为单例在整个测试过程中也是全局唯一的，使得需要在测试开始前模拟出某种状态的过程，同时需要在测试完成后手动销毁这种状态以备下一个测试，造成潜在的逻辑异常。&lt;/li>
&lt;/ol>
&lt;p>那么我们该如何&lt;strong>正确地使用单例模式&lt;/strong>呢？&lt;/p>
&lt;p>答案就是使用依赖注入（Dependency Injection），不是由调用方主动发起指向单例类的连接，而是&lt;strong>从一开始就假设调用方已经拥有了这个单例类&lt;/strong>。其实不论是使用构造函数传入，还是使用普通方法绑定，核心思想都只有一个：&lt;/p>
&lt;pre>&lt;code>只要我想要某个依赖，我就一定会拥有。至于这个依赖究竟来自哪里，是谁给我的，我不关心。
&lt;/code>&lt;/pre>
&lt;h2 id="举个栗子">举个栗子&lt;/h2>
&lt;p>就拿手头一个正在推进的项目举例吧。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">TaskManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ITaskManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Iterable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rules&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Timer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">timer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Timer&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TimerTask&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">timerTasks&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">TaskManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Iterable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rules&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">rules&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rules&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">filterActiveRules&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">createTimers&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">filterActiveRules&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">activeRules&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">rules&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isActive&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">activeRules&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">rules&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">activeRules&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">createTimers&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">rules&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">timerTasks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TimerTask&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// emmm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">BackgroundWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">newTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">start&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// emmm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">BackgroundWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timerTasks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">keySet&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">scheduleAtFixedRate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timerTasks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getDuration&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">60&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1000&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">destroy&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timerTasks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">keySet&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timerTasks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">cancel&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">cancel&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">purge&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// emmm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">BackgroundWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">stop&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>TaskManager 类是一个负责管理消息推送任务的类，每隔特定的时间向 BackgroundWorker 这个单例类推送某个特定的任务让其执行。&lt;/p>
&lt;p>看起来似乎没什么问题，代码也很简单。但是在我开始编写单元测试的时候，问题出现了：&lt;/p>
&lt;p>因为 Mockito 不支持 mock 静态方法，因此我没有办法隔离 TaskManager 对 BackgroundWorker 的调用，而 BackgroundWorker 本身又是依赖 Android 设备的。&lt;/p>
&lt;p>当然，我可以选择使用功能更强大，支持 mock 静态方法的 Powermock，但似乎本能的，我对这种 hack 的解决方式打心眼里不甚喜欢，且不说对静态函数的修改会导致测试代码变得丑陋。&lt;/p>
&lt;p>怎么办呢？单元测试总是要写的。&lt;/p>
&lt;p>那么，答案就只有一……&lt;/p>
&lt;p>咳咳，刚才我什么都没说。那么，是时候祭出我们的依赖注入了！&lt;/p>
&lt;h2 id="使用依赖注入的改正">使用依赖注入的改正&lt;/h2>
&lt;p>直接贴代码，解释见注释。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">TaskManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ITaskManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Iterable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rules&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Timer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">timer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Timer&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TimerTask&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">timerTasks&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/* 留有一份IBackgroundWorker的实例 */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IBackgroundWorker&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">backgroundWorker&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/* 为了简化调用逻辑，使用构造函数注入，并更换为接口 */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">TaskManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Iterable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rules&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IBackgroundWorker&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">backgroundWorker&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">rules&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rules&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> 拿到IBackgroundWorker实例，可以调用啦
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> 至于它是哪里来的，不管，反正只要能用就行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">backgroundWorker&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">backgroundWorker&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">filterActiveRules&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">createTimers&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">filterActiveRules&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">activeRules&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">rules&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isActive&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">activeRules&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">rules&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">activeRules&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">createTimers&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">rules&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">timerTasks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TimerTask&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> 这里，直接使用我们得到的IBackgroundWorker实例
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> 免去直接对单例类的依赖
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TaskManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">backgroundWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">start&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalStateException&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/* 同理 */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">backgroundWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timerTasks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">keySet&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">scheduleAtFixedRate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timerTasks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getDuration&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">60&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1000&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">destroy&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timerTasks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">keySet&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timerTasks&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">cancel&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">cancel&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">purge&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">timer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/* 同理 */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">backgroundWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">stop&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样，当我在编写单元测试的时候，就可以直接 mock 一个 BackgroundWorker 实例，作为参数传入 TaskManager，通过调用计数的方式检查其是否成功推送了任务。&lt;/p>
&lt;p>大概就长这样：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">BackgroundWorker&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cttBackgroundWorker&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">BackgroundWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">doNothing&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">when&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cttBackgroundWorker&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">newTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">doNothing&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">when&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cttBackgroundWorker&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">doNothing&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">when&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cttBackgroundWorker&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">stop&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">TaskManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">taskManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TaskManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rules&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cttBackgroundWorker&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">taskManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cttBackgroundWorker&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">times&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="na">newTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当然，我 TaskManager 里用实例是用得爽了，但是实例要从哪来呢？&lt;/p>
&lt;p>其实简单思考一下，答案马上就出来了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">TaskManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">taskManager&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TaskManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rules&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BackgroundWorker&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInstance&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>完事。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>其实这篇文章的诞生完全是一个顺理成章的过程，以上的种种经过也是我在开发项目过程中真实产生的问题。而想到这个解决方案也是完全凭借我自己的思考。之前虽然有看过诸如控制反转，依赖注入之类的文章，但当时就是云里雾里，完全不知道他们在说什么，如今编写了真实的代码，遇到了真实的问题，才对这一切有了真实的感受。&lt;/p>
&lt;p>软件工程本就是一个经验科学。任何理论最终还是需要用实践去体会。我不知道这是否意味着只要是一个实战经验丰富的软件工程师，哪怕仅凭无意识，也能熟练运用类似的构建方式，毕竟这会使我怀疑起软件工程这门学科本身的存在意义。&lt;/p>
&lt;p>但是，我确定知道的一点是，亲手让一个系统中的各个模块变得简单，专一，易于测试，这个过程，是十分令人愉快的。&lt;/p></description></item><item><title>《彼女は天使で妹で》小评</title><link>https://tinyadapter.com/post/galgame-review/tenshiimo/</link><pubDate>Sun, 03 Feb 2019 22:47:43 +0000</pubDate><guid>https://tinyadapter.com/post/galgame-review/tenshiimo/</guid><description>&lt;img src="https://tinyadapter.com/cover/6.png" alt="Featured image of post 《彼女は天使で妹で》小评" />&lt;p>所以说人为什么要作死呢（笑）&lt;/p>
&lt;p>这里是被 node-ffi 虐到无以复加的斑桜。&lt;/p>
&lt;p>说起来我好像食言了，上篇博客结尾说下篇要写《LOVESICK PUPPIES》的，那么问题来了（以下略）&lt;/p>
&lt;p>好吧，其实游戏我玩了，但是怎么说呢，完全没有必要为它写小评啊。&lt;/p>
&lt;p>整部 Gal 给我的感觉就是，用一个绝对新颖的世界观，起了一个无与伦比的好头，之后就 TM 一泻千里。&lt;/p>
&lt;p>讲真，可以算是良作，但编剧实在是自己对不起自己。好好往下写啊魂淡！&lt;/p>
&lt;p>之后又断断续续推了一些：《Strawberry Nauts》啊，《将軍様はお年頃》啊，《Corona Blossom》啊，《乙女が結ぶ月夜の煌めき》啊（还是用的 VNR，音符社女儿怎能不看，咳咳，跑题了），但其实这些作品也不是特别有深度，属于那种可以哈哈哈来消遣，但很难冷静下来仔细思考的作品。&lt;/p>
&lt;p>然后就让我摸到了这作。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>先说好，以下所有内容都是我边推边思考边写的，因为整条主线一气呵成，甚至已经可以算作线性剧情了，而且结局使我致郁（这里是重点），所以就不整理了，可以一瞥我在推本作时的心路历程 emmm&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>其实整部作品从一开始就已经从字里行间渗透出一种氛围：&lt;/p>
&lt;blockquote>
&lt;p>所谓的人物线其实根本就是为主线服务的。&lt;/p>
&lt;/blockquote>
&lt;p>当然，至于说为什么，从游戏流程（其实就是攻略啦）便可知晓。&lt;/p>
&lt;p>首先，本作并没有采用类似悬疑推理型 Gal 常见的线性剧情模式（如《秽翼的尤斯蒂娅》《时钟机关的 Ley-line》等作品中出现的，游戏沿既定的线路一直走下去，直到在某处分支出次要人物线并直接中断）。当然，不要被表象迷惑，因为隐藏在选择肢下的其实是以下剧情结构：&lt;/p>
&lt;pre>&lt;code>高桥未亚 -- +
|-- 源恵理那 -- 仁科十花
相羽一海 -- +
&lt;/code>&lt;/pre>
&lt;p>看到了么，距离完全的线性剧情模式也仅仅只在前两个人物的攻略顺序上给出了一点点自由度而已。这说明什么？&lt;/p>
&lt;ol>
&lt;li>未亚和一海两线能够在只交代一部分世界观的情况下走完，但是惠理那和十花两线就不行，必须要完整的世界观；&lt;/li>
&lt;li>十花是女主我可以理解，但惠理那居然也必须满足第一点，说真的我惊到了。&lt;/li>
&lt;/ol>
&lt;p>其次，在我实实在在通了未亚线之后，对于以上情况的理解便更加深刻了。&lt;/p>
&lt;h2 id="高桥未亚">高桥未亚&lt;/h2>
&lt;p>未亚线其实讲述了一个十分复杂而又具备宏大叙事的主题，即人的幸福与生命长短之间到底是否存在因果关系的话题。当然，作为一个身经百战，见得多了的 Gal 玩家，类似主题的作品早已阅历无数，因此也并没有过高或者过低的期待值。&lt;/p>
&lt;p>但是本作异于往常的地方就在于，就在其他内涵不佳的作品（这里不点名）仅仅通过男女主之间各种离奇遭遇狂轰滥炸般向玩家灌输“我们确实是在讨论生死大义的问题”时，《天使妹》却在其中加入了一个不一样的点：&lt;/p>
&lt;p>一个从来没有出场但又切实存在，充满着恶趣味的神的形象。&lt;/p>
&lt;p>可以说，这样一个将现实世界中各种突发事件拟人化的手法巧妙规避了以往讨论此类话题中频繁遭人诟病的都合主义问题，毕竟，剧情中但凡出现突发事件的地方，都可以是拜这个恶趣味的神所赐，跟萤幕外的编剧没有一丝一毫的关系（笑）&lt;/p>
&lt;p>另外还有一点，算作忠告一类的东西。&lt;/p>
&lt;p>虽然我本人推这部作品的最初动力确实是开篇各种搞笑剧情和梗、包袱齐飞的场面，但是，《天使妹》却绝对不是一个让人哈哈一笑就能过去的作品。未亚线的结束让我更加意识到这点。&lt;/p>
&lt;p>其实一开始看到攻略中出现的“フラグ END”字样，我是很奇怪的。“フラグ”是 flag 的日语念法，而这个词在 ACG 语境下指什么大家应该都懂。所以我还是有点怕，一旦出现什么全灭结局，就着实比较让人无语。&lt;/p>
&lt;p>但是，等我真的通关未亚线（包含一个人物 END 和一个フラグ END。顺带一提，一共有三个フラグ END）后，我发现我想反了。&lt;/p>
&lt;p>如果拿线性剧情模式类比的话，那么フラグ END 就跟继续主线是一样的结果。男主没有在人物上多做停留，而是继续开始了他接下来的征程。&lt;/p>
&lt;p>而在人物 END 中，男主选择了留下来，于是跟线性剧情模式一样，故事在此处终止。&lt;/p>
&lt;p>这种停留并不是一种令人释怀的停留，而是男主放弃了。他决定收起背后黑色的羽翼，将自己想要向现任神提出的问题亲手终结。&lt;/p>
&lt;p>……&lt;/p>
&lt;p>作为戏外的玩家，我们当然可以动动鼠标就轻松地将两个结局全部阅览一番。但是，现实可不是游戏。假如你是游戏中的男主，你又会做出怎样的选择呢？&lt;/p>
&lt;p>如果你的答案是继续前行，那么恭喜你。&lt;/p>
&lt;p>因为，正如洞穴探险一般——&lt;/p>
&lt;p>愈往深处，便愈黑暗。&lt;/p>
&lt;h2 id="相羽一海">相羽一海&lt;/h2>
&lt;blockquote>
&lt;p>——神啊。这个就还给你吧。&lt;/p>
&lt;p>——我，不，我们已经不需要你的慈悲了。&lt;/p>
&lt;p>——因为人类绝对没有那么脆弱。&lt;/p>
&lt;/blockquote>
&lt;p>相比起未亚线一波三折的剧情走向，一海线就要简单直白得多，整条故事线自始至终围绕着一海的母亲展开。&lt;/p>
&lt;p>而一海线的终极矛盾就在于，「明明想死却死不了，和明明不想死却已经死了，到底哪边更加不幸」，这样一个主题。&lt;/p>
&lt;p>虽然人鱼吃人的典故我不是很懂，但是这个梗本身并不妨碍理解剧情。&lt;/p>
&lt;p>在一海线临近结束的部分，故事终于将渐渐明晰的完整世界观展现给了玩家：每当男主放弃与人物之间的感情，而选择继续前行，这个世界就会被神「撕毁」。&lt;/p>
&lt;p>因此，所有的故事都是虚假的。男主只剩下一往无前。&lt;/p>
&lt;p>……行吧，虽然对其它人物挺不公平的，但是线性剧情嘛，没办法。&lt;/p>
&lt;p>但其实让我无法理解的一点在于，除了男主之外，貌似所有的人物都早就知道这个世界是虚假的。这次也是一样，当男主下定决心继续前行时，是一海直接跟男主说的「这个世界会结束」。&lt;/p>
&lt;p>我大概可以理解，每条人物线中的女主都是真心与男主相伴的。因此无论男主最终的选择如何，自己都没有任何的损失。&lt;/p>
&lt;p>说到底，连这个世界本身都是假的，那么自己的存在究竟还是否有意义呢？&lt;/p>
&lt;p>……实在是有够哲学的。&lt;/p>
&lt;p>哦对了，如果你像我一样提前看了攻略的话，一定能够理解一海线最后的那个选择肢究竟在指什么。「杀死」和「不杀」，应该不用我多做说明。&lt;/p>
&lt;p>别信它的。&lt;/p>
&lt;p>不管你怎么选，最后的结局都不会发生变化（对于这个虚假的世界而言）。&lt;/p>
&lt;h2 id="源恵理那">源恵理那&lt;/h2>
&lt;blockquote>
&lt;p>「神」是一个 AI。&lt;/p>
&lt;/blockquote>
&lt;p>整部作品就像是一个大混杂。看似人畜无害的浪漫背景下，隐藏的是各种各样复杂而又敏感的社会问题。&lt;/p>
&lt;p>包括强人工智能的主旨偏离，娱乐圈的规则与潜规则，个人与他人的关系，平行世界，物质与情感的取舍，兄妹伦理等。&lt;/p>
&lt;p>很难想象这是一个 Gal 可以一本正经地讨论的问题。&lt;/p>
&lt;p>如果一路沿着主线一路奔下去的话，其实前三条线就是男主对三种不同情感诱惑的拒绝：&lt;/p>
&lt;ul>
&lt;li>象征解决他者重大变故的未亚线&lt;/li>
&lt;li>象征解决关系者重大变故的一海线&lt;/li>
&lt;li>象征没有任何重大变故，平和情感推进的恵理那线&lt;/li>
&lt;/ul>
&lt;p>上演了一出《只有神知道的世界》。&lt;/p>
&lt;p>就像中文一样，日语中也总是把 AI（人工智能）和爱联系在一起（日语中「爱」就读 ai）。&lt;/p>
&lt;p>世界观完全明晰了。男主由于内心的纯净而被维护临时支撑这个世界的 AI，也就是爱，的人看中，想要让他成为新世界的卡密（误）。&lt;/p>
&lt;p>而随着时间的推移，爱对于世界的塑造愈发的让人无法理解。&lt;/p>
&lt;p>可以说，距离崩坏越来越近。&lt;/p>
&lt;p>关于这点，当初一海线的叙述可能并不明显，因为一海母亲本身就是个不受神控制的存在。但在未亚线中，可以清楚地看到，随着剧情走向后期，神控制人生死的混乱与前后不一。&lt;/p>
&lt;p>为什么神偏偏就自 150 年前起不在了，而不是什么别的时间呢？&lt;/p>
&lt;p>唯一能够解释的一点就是，这段剧情其实是在影射明治维新。&lt;/p>
&lt;p>看这段：&lt;/p>
&lt;blockquote>
&lt;p>十花「神不在了。这个状态已经持续了 150 年了」&lt;/p>
&lt;p>一海「那以前我见过的那个神呢？」&lt;/p>
&lt;p>十花「那只不过是未来用神之奇迹创造的假货」&lt;/p>
&lt;p>十花「毕竟不能随便让人知道现在的世界早就没了神的管理啊」&lt;/p>
&lt;/blockquote>
&lt;p>破除神权 + 君主立宪，只能说 ALcot 这次真的是有点往神作方向发展的意味了。&lt;/p>
&lt;hr>
&lt;p>在第三个世界结束前，神无月代替被爱选中的优希，成为了神。&lt;/p>
&lt;blockquote>
&lt;p>我一直都想问神。&lt;/p>
&lt;p>为何明明唯有悲苦，却依旧让人降生。&lt;/p>
&lt;p>于是，神（朋）明（友）明确地告诉了我。&lt;/p>
&lt;p>万灵皆伴祝福而生。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://tinyadapter.com/post/galgame-review/tenshiimo/tenshiimo1.jpg"
width="1585"
height="891"
srcset="https://tinyadapter.com/post/galgame-review/tenshiimo/tenshiimo1_hu720ffb06cf0648117a4dc004af52f11a_267883_480x0_resize_q75_box.jpg 480w, https://tinyadapter.com/post/galgame-review/tenshiimo/tenshiimo1_hu720ffb06cf0648117a4dc004af52f11a_267883_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;p>当然，最终这个世界也被「撕毁」了。而最后一次循环，当优希真正想成为神的时候，自然应当面对最为黑暗与痛苦的过程。&lt;/p>
&lt;p>来吧，最凶的故事即将开始！&lt;/p>
&lt;h2 id="仁科十花">仁科十花&lt;/h2>
&lt;blockquote>
&lt;p>大家都说我的灵魂纯净无暇。&lt;/p>
&lt;p>但那份纯净，一定不是由纯真而来。&lt;/p>
&lt;p>只不过是，期望一切都重归虚无的一种表达。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>人类的价值观一直在教导人类敬畏生命。&lt;/p>
&lt;p>所以绝不能自杀。&lt;/p>
&lt;p>无论多么辛苦，都要活下去。&lt;/p>
&lt;p>这就是常识。&lt;/p>
&lt;p>但那不正是在强迫让人必须选择活下去吗？&lt;/p>
&lt;p>那真的是正确的吗？&lt;/p>
&lt;p>既然不能强迫人的死亡，难道对待生存的选择权不也应该同理吗？&lt;/p>
&lt;p>有些人为了保护尊严，自愿选择死亡，难道是不对的吗？&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>——我消灭了全人类。&lt;/p>
&lt;p>——但希望艾莲和仁科优希他们两个能够幸福地活下去。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>「希望和绝望，一定就是硬币的正反面」&lt;/p>
&lt;p>「它们是绝对不会分隔开的」&lt;/p>
&lt;p>「只要有人选择绝望，就会给其他人带来与之相应的希望」&lt;/p>
&lt;p>「规则大概就是这个样子」&lt;/p>
&lt;/blockquote>
&lt;p>如果纯以结果论而言的话，优希终究还是成为了神。&lt;/p>
&lt;p>当然，这个过程就显得十分复杂并且极度剧透，所以还是不展开了。&lt;/p>
&lt;p>说到底，其实整条线都在向玩家灌输一点：&lt;/p>
&lt;blockquote>
&lt;p>如果人类只是一个肮脏，麻烦，自相残杀，性欲满载，只会加害地球的物种，那么我们为什么还要让他们继续存在下去呢？&lt;/p>
&lt;/blockquote>
&lt;p>先代神明们不是离开神殿后再也不回，就是自杀，一方面看到人类荒唐的活动而精神崩溃，另一方面又必须不断为人类的活动书写世界日志。&lt;/p>
&lt;p>货真价实的身心俱疲。&lt;/p>
&lt;p>优希从一开始的对不讲道理的神的仇恨，到知晓一切时对自身的否定，此时他作为人类的部分死去了，而作为神明的部分因而诞生。&lt;/p>
&lt;p>他自己也很清楚这点，最初的那句「期望一切都重归虚无」便是证明。&lt;/p>
&lt;p>然而最终，在目睹了全人类消失的世界后，他还是意识到自己错了。&lt;/p>
&lt;p>因为这个看似对神明完美的结局，其实最终没有拯救十花、凉、未来三人。&lt;/p>
&lt;p>最终，优希以自身的不幸为代价，换取了世界上所有人的幸福。&lt;/p>
&lt;p>然而，那些曾经与他有过羁绊的人并没有忘记。&lt;/p>
&lt;p>十花在结束前向着天空的那一声嘶吼，伴随着那个 CG 定格为新的主标题界面背景，为整部作品增添了无数的魅力。&lt;/p>
&lt;p>&lt;img src="https://tinyadapter.com/post/galgame-review/tenshiimo/tenshiimo2.jpg"
width="1585"
height="891"
srcset="https://tinyadapter.com/post/galgame-review/tenshiimo/tenshiimo2_hu125684dcd4e41398e522a6adf4d26689_219923_480x0_resize_q75_box.jpg 480w, https://tinyadapter.com/post/galgame-review/tenshiimo/tenshiimo2_hu125684dcd4e41398e522a6adf4d26689_219923_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="结语">结语&lt;/h2>
&lt;p>《彼女は天使で妹で》其实找到了一个有趣的剧情切入点：如果这个世界真的存在「神」的话，那么这个「神」的工作是什么样子的。&lt;/p>
&lt;p>以此为契机，整部作品其实都在回答这个问题。&lt;/p>
&lt;p>如果你简单运用唯物辩证法思考一下的话，其实马上也可以得出结论：在这个熵增的世界下，人类的活动越来越频繁，如果「神」真的存在，那么它早就会不堪重负。&lt;/p>
&lt;p>因而，根本就不存在什么「神」。只有人类才能决定人类的未来。&lt;/p>
&lt;p>完美的唯物主义。&lt;/p>
&lt;p>其实我本可以在脑内将本作划分为神作的范畴，但是突然想到的一件事让我开始犹豫起来。&lt;/p>
&lt;p>那就是，本作与《秽翼的尤斯蒂娅》的雷同性。&lt;/p>
&lt;p>没有比这更巧合的了：&lt;/p>
&lt;ul>
&lt;li>两部作品都可以算作线性剧情&lt;/li>
&lt;li>男主选择某一非女主人物都只是暂时逃避，世界最终还是会毁灭&lt;/li>
&lt;li>最终一人成神迎来世界和平（这里的不同在于本作成神的是男主，而《尤斯蒂娅》是女主）&lt;/li>
&lt;/ul>
&lt;p>当然，我肯定不能因此就断定本作的编剧在创作时是否借鉴了《尤斯蒂娅》，也可能类似的剧情只能使用这种表现方式什么的。事实上，我也确实没想到什么其他表现的手段。&lt;/p>
&lt;p>但是，谨慎一点总是好的。&lt;/p>
&lt;p>话说回来，既然提到了八月社的作品，下部预定要推的就要非八月社遗作（误）《千の刃濤、桃花染の皇姫》莫属了。&lt;/p>
&lt;p>听说这部作品口碑稀烂，根据本人特有的审丑美学，我倒要看看能烂到什么程度 (完)&lt;/p></description></item><item><title>Als die Nazis die Kommunisten holten</title><link>https://tinyadapter.com/post/society/martin-niemoller/</link><pubDate>Sat, 21 Jul 2018 14:21:55 +0000</pubDate><guid>https://tinyadapter.com/post/society/martin-niemoller/</guid><description>&lt;img src="https://tinyadapter.com/cover/2.png" alt="Featured image of post Als die Nazis die Kommunisten holten" />&lt;blockquote>
&lt;p>Als die Nazis die Kommunisten holten,
habe ich geschwiegen;
ich war ja kein Kommunist.&lt;/p>
&lt;p>Als sie die Sozialdemokraten einsperrten,
habe ich geschwiegen;
ich war ja kein Sozialdemokrat.&lt;/p>
&lt;p>Als sie die Gewerkschafter holten,
habe ich nicht protestiert;
ich war ja kein Gewerkschafter.&lt;/p>
&lt;p>Als sie die Juden holten,
habe ich geschwiegen;
ich war ja kein Jude.&lt;/p>
&lt;p>Als sie mich holten,
gab es keinen mehr,
der protestieren konnte.&lt;/p>
&lt;p>&amp;ndash; Martin Niemöller (1892-1984)&lt;/p>
&lt;/blockquote></description></item><item><title>《ノラと皇女と野良猫ハート》小评</title><link>https://tinyadapter.com/post/galgame-review/noraneko/</link><pubDate>Wed, 18 Jul 2018 18:52:26 +0000</pubDate><guid>https://tinyadapter.com/post/galgame-review/noraneko/</guid><description>&lt;img src="https://tinyadapter.com/cover/3.png" alt="Featured image of post 《ノラと皇女と野良猫ハート》小评" />&lt;p>啊啊，好久不见。&lt;/p>
&lt;p>没更新blog的这接近一年的时间里，本人过得简直焦头烂额，经历了各种诸如「24小时精通软件工程」、「16小时精通操作系统」、「48小时精通数据库系统」之类的不堪回首的往事。&lt;/p>
&lt;p>在这里给那些大学想报软件工程的高中生们提个醒：&lt;/p>
&lt;p>&lt;strong>软件工程 (SE) 是文科专业，想学编程出门左转计算机科学与技术 (CS)&lt;/strong>&lt;/p>
&lt;p>好了牢骚发完了，接下来进入正题。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>要从最近数年的市场找一个既有趣又能讲深度的Gal，《野良猫》确实得算一个。&lt;/p>
&lt;p>但是吹的人多了，自然总会有一种想确认是不是真的如说得那么神的冲动。&lt;/p>
&lt;p>于是就玩了。然后开场几分钟就被震惊到了。&lt;/p>
&lt;p>编剧绝对是三分钟不玩梗会死，前两小时的共通线简直是从头笑到尾233&lt;/p>
&lt;p>于是，起码搞笑这部分算是齐活了。&lt;/p>
&lt;h2 id="旁白">旁白&lt;/h2>
&lt;p>我一开始对旁白这种角色是不怎么感冒的，主要是最近见到了不少以旁白角色作为游戏主要元素之一的MetaGames，而我普遍又对那种本身没啥营养，只是刻意制造话题的旁白角色们没什么兴趣。不过《野良猫》里的旁白显然不属于前者。&lt;/p>
&lt;p>作为人声部分的旁白需要花一定的时间适应（毕竟其它Gal里很少见），不过当习惯了之后，只要这个吐槽役担当主力一出场，就绝对会让你笑个不停。&lt;/p>
&lt;h2 id="黑木未知">黑木未知&lt;/h2>
&lt;p>黑木线最大的冲突点来自黑木和她的母亲之间的隔阂。这种隔阂起源于一个单亲家庭最普通的寂寞感与自立希望，而又因野良的加入而更添阴霾。&lt;/p>
&lt;p>说起来这种事情也是现实生活中很常见的。作为失去丈夫，只剩下独生女的母亲，望女成凤的心态自然是不在话下。而如果这个唯一的女儿能够在某种程度上处于同龄人中的佼佼者的话，就会更加助推这种心态的无限放大，直到达到一种近乎病态的状态。&lt;/p>
&lt;p>但说到底孩子即属于父母又不属于父母。不论儿子还是女儿，首先都是一个活生生的人。他们有着自己的想法，而将来也都会有离开父母，远走高飞的一天。&lt;/p>
&lt;p>而心里十分清楚这一点的黑木母亲，内心的混乱驱使她将这份不协调无理由地转嫁到黑木身边的“差等生”，包括野良。这使得黑木更加不信任她的母亲，反过来更加依靠她身边的朋友。&lt;/p>
&lt;p>死结就此形成。&lt;/p>
&lt;p>并且，这种缺乏被女儿理解的现状使得黑木母亲会转过来将其寄托到某个幻想的，能够理解她心情的，同龄男性身上。而众所周知，这种外人眼中「成功的女强人」所主导的家庭，同时也是由最家庭中最脆弱的「单亲妈妈」所管理的。&lt;/p>
&lt;p>最终，被别有用心的人利用了。&lt;/p>
&lt;p>说到底还是挺讽刺的，黑木母亲最后还是被她看不起的黑木的朋友救了。救人的是即使在社会上也容易让人紧张的黑道一组的女儿。&lt;/p>
&lt;p>故事主线叙述完了，接下来分析一下问题。&lt;/p>
&lt;p>从总体上来说，黑木线还是有着一个比较优秀的，能在主人公们吵吵闹闹的过程中将剧情推进到结束的不无聊的故事。但是这不代表着它能一直保持着这种优势。&lt;/p>
&lt;p>在故事接近结尾的地方，出现了由于前面过于暴走的剧情走向刹不住闸所导致的两个问题：&lt;/p>
&lt;ol>
&lt;li>作为整个剧情中大反派担当的黑木母亲洗白得过快，玩家有点转不过来弯；&lt;/li>
&lt;li>最关键的是，跳过了一大段甚至可以直接出续作的剧情，直接飞入了大团圆结局。&lt;/li>
&lt;/ol>
&lt;p>当然，这么明显的「失误」，就当是HARUKAZE为真·续作开了个支票好了。谁叫他们有这个自信呢(笑)&lt;/p>
&lt;p>另外，黑木线的最后，旁白有一句容易被忽略但却又至关重要的话被我发现了，从而知道了其在游戏世界中对应的真实身份是谁。当然这里为了不剧透就不说了，不过我觉得很多玩家应该猜得到吧。&lt;/p>
&lt;p>&lt;img src="https://tinyadapter.com/post/galgame-review/noraneko/noraneko1.jpg"
width="1920"
height="1080"
srcset="https://tinyadapter.com/post/galgame-review/noraneko/noraneko1_huc8a0da157c81eb2352817fcc6efb9264_197131_480x0_resize_q75_box.jpg 480w, https://tinyadapter.com/post/galgame-review/noraneko/noraneko1_huc8a0da157c81eb2352817fcc6efb9264_197131_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="明日原佑希">明日原佑希&lt;/h2>
&lt;p>相对于黑木线剧情大开大合始终处于暴走状态，明日原线就是一个简单到不行的小故事。&lt;/p>
&lt;p>但故事小不意味着无趣，其中穿插着以野良作为猫的姿态在明日原打工的猫咪咖啡厅「工作」的欢乐与感动交织的日常，诉说着动物与生命的大道。&lt;/p>
&lt;p>当然，主线还是放在「人」的一边。&lt;/p>
&lt;p>明日原小时候因为学习不好加上出身贫寒，受尽了班里人的欺负。后来她初二就退了学，独自一人前往东京打拼。&lt;/p>
&lt;p>然而只坚持了三个月。&lt;/p>
&lt;p>至于为什么是这么短的时间，明日原在后来与野良的长谈中表明了自己的想法：如果抱着讨厌这里的逃避心态前往东京，那么过不了多久也会因同样的理由讨厌起东京来。&lt;/p>
&lt;p>说到底，不是环境的问题，而是人的问题。&lt;/p>
&lt;p>逃避是没有用的。如果一味地逃避，最后停下来时便会发现——周围只剩下自己孤身一人了。&lt;/p>
&lt;p>故事剩下的，就是怎样为过往叛逆的自己赎罪，以及与那些同样轻浮的人断绝关系，成为一个货真价值的「人」了。&lt;/p>
&lt;p>又是一个拯救失足少女的美满结局，可喜可贺可喜可贺。&lt;/p>
&lt;p>主要还是故事简单而平凡(?)的叙事风格让我没办法长篇大论地评价。不过，嘛这样也挺好的不是么。&lt;/p>
&lt;p>&lt;img src="https://tinyadapter.com/post/galgame-review/noraneko/noraneko2.jpg"
width="1920"
height="1080"
srcset="https://tinyadapter.com/post/galgame-review/noraneko/noraneko2_hu6285c1449d520dd7a32db3c0cc2563a2_284619_480x0_resize_q75_box.jpg 480w, https://tinyadapter.com/post/galgame-review/noraneko/noraneko2_hu6285c1449d520dd7a32db3c0cc2563a2_284619_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="夕莉纱织">夕莉纱织&lt;/h2>
&lt;p>如果说开了支票的续作要补完哪部分的话，那纱织线绝对是必需之一。&lt;/p>
&lt;p>在纱织线中，世界观从最初的人冥两界被拓宽到了人冥天三界，而纱织本人便是从天界降临的。&lt;/p>
&lt;p>但是整个剧情除了这个含混不清的「天界」概念，以及附着在纱织背后的机械翅膀之外，就别无其它对背景的交代。从理论上讲，天冥二界本身也是水火不容的，但除了最后三姐妹之间的有一小段对话阐释了一下，其它的也丝毫没有提及。&lt;/p>
&lt;p>……所谓的挖坑不填呢(笑)&lt;/p>
&lt;p>除开世界观不谈，纱织线是一条完整补完野良童年往事的故事线。而两人感情最初的跌跌撞撞，也是起于野良母亲在生命的最后交代给纱织的一段话。&lt;/p>
&lt;p>因为这段话的存在，纱织一直想担当的其实是野良的母亲而并非女友，这与野良心目中纱织照看他的目标完全不同。&lt;/p>
&lt;p>作为无机质机械的气候调节装置，纱织在野良家住下的这几年，使她逐渐被人类所同化，拥有了情感。&lt;/p>
&lt;p>而故事的最后，两人在旧友和新友的见证下成功结为情侣。没有什么波澜的平和时光。&lt;/p>
&lt;p>但是，这样就好。&lt;/p>
&lt;h2 id="帕特莉希亚欧布恩特">帕特莉希亚·欧布恩特&lt;/h2>
&lt;blockquote>
&lt;p>「据说人变为兽之时，将会成为美丽的传说」&lt;/p>
&lt;p>「如若为马，其名为肯陶洛斯」&lt;/p>
&lt;p>「如若为鹿，其名为阿克泰翁」&lt;/p>
&lt;p>「如若为熊，其名为卡利斯托」&lt;/p>
&lt;p>「如若为狼，其名为莱卡翁」&lt;/p>
&lt;p>「如若为猫，其名为，野良」&lt;/p>
&lt;/blockquote>
&lt;p>帕特线作为整个游戏的主线，流程自然是整个游戏中最长的。&lt;/p>
&lt;p>长到什么程度呢，甚至连帕特的两个姐妹都加入了被攻略阵营。&lt;/p>
&lt;p>所以说，这应该叫「三姐妹线」(笑)&lt;/p>
&lt;p>剧情主要的着力点放在了「人之所以为人」这样的宏大叙事上，给玩家留下了无尽的思考。&lt;/p>
&lt;blockquote>
&lt;p>人类的寿命越来越长了。再这样下去，人类就会完全忘记死亡。&lt;/p>
&lt;p>这样是不行的，于是要给人间带来毁灭，才能是他们记起死亡为何物。&lt;/p>
&lt;/blockquote>
&lt;p>但是，这是真的么？&lt;/p>
&lt;p>纵使根据人类寿命变长便可以推断将来真的有可能实现「不老」，但是「不死」， 可不是仅凭人类就可以独自决定的事情。&lt;/p>
&lt;p>这让我想起另一部叫做《さくら、咲きました。》Gal。在那部Gal中，人类甚至已经实现了不老，成为了tokoshie (常しえ，永远) ，但最终还是在小行星撞击地球的瞬间迎来了毁灭。&lt;/p>
&lt;p>当然，每个故事都有独属于自己的世界观，套用别作没多大意义，不过，这样也可以多一种思考的方向，加深自己的理解。&lt;/p>
&lt;p>&lt;img src="https://tinyadapter.com/post/galgame-review/noraneko/noraneko3.png"
width="1806"
height="1016"
srcset="https://tinyadapter.com/post/galgame-review/noraneko/noraneko3_hua7b29023db3ecf6d71ea3fbec8aaf8b3_1206962_480x0_resize_box_3.png 480w, https://tinyadapter.com/post/galgame-review/noraneko/noraneko3_hua7b29023db3ecf6d71ea3fbec8aaf8b3_1206962_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>放眼近几年的Gal市场，废萌横行，硬核说理很难得到应有的赏识。不过像《野良猫》这种在喜剧 &amp;amp; 讨好阿宅的剧本大框架下隐藏严肃理论的作品火了一把，应该可以被理解为被失声已久的传统Gal受众的一次成体系的反扑。&lt;/p>
&lt;p>现如今业界风气不佳，纵使完全剧情向的自信之作也仅有frontwing发布的《ISLAND》一作 (这年头能出真·全年龄作，那确实得对剧本有不小的自信)。sprite社的「倒戈」也是大环境中的一个小体现。&lt;/p>
&lt;p>下一个要推的Gal已经预定好了，《LOVESICK PUPPIES》，也是口碑挺高的一部作品。&lt;/p>
&lt;p>抓紧时间玩吧，谁知道业界还能撑几年 (完)&lt;/p></description></item><item><title>《女装家教》小评</title><link>https://tinyadapter.com/post/lightnovel-review/jyosou-kaseikyoushi/</link><pubDate>Sat, 23 Sep 2017 13:36:08 +0000</pubDate><guid>https://tinyadapter.com/post/lightnovel-review/jyosou-kaseikyoushi/</guid><description>&lt;img src="https://tinyadapter.com/cover/7.png" alt="Featured image of post 《女装家教》小评" />&lt;p>啊，感觉好久都没有写小评了呢。大概有两个月了？&lt;/p>
&lt;p>其实也不是说最近没有在玩Galgame，上个月推了两个，一个是ISLAND，一个是千恋万花。&lt;/p>
&lt;p>但是这俩一点也不像什么能够写出小评的作品……ISLAND本来一开始也是在正经地做笔记想要写点什么的，但是后来随着夏篇的结束感觉剧情变得愈发复杂了起来，于是也就没有去继续做笔记，而是一口气推到了结局。&lt;/p>
&lt;p>不过如果简单地说一下的话——这是个剧情绝对优秀的作品，我个人是十分推荐的。&lt;/p>
&lt;p>不过由于我本身也没有特别看懂，所以也不好直接去评判。&lt;/p>
&lt;p>而千恋万花……这个我真的没什么好写的，只能祝柚子社继续大卖了。&lt;/p>
&lt;p>&lt;strong>给我稍微写点不废萌的剧本好不好啊算我求求你们了就夏空彼方那种就不错的！（怨念）&lt;/strong>&lt;/p>
&lt;p>&lt;del>「我永远喜欢朝武芳乃.jpg」&lt;/del>&lt;/p>
&lt;p>咳咳，于是这次是对野村美月的《女装家教》这部轻小说的小评。&lt;/p>
&lt;p>因为并不是Galgame那种需要在多条人物线上长篇大论的类型，所以也就简单地讲一讲好了。&lt;/p>
&lt;p>首先对于野村这个人，我还算是有点了解的（主要是依靠《文学少女》系列）。文笔非常地娴熟，热爱短篇和番外篇，是那种能流畅地吐槽和说理的，非常难得一见的作家。&lt;/p>
&lt;p>其实有些时候也在想，这种人去写轻小说是不是有点屈才了呢什么的，不过既然有的看也挺好的。&lt;/p>
&lt;p>而这次执笔的《女装家教》，听本人说是其最中意的作品。而我在读完以后，也是这样想的。&lt;/p>
&lt;p>这的确是一部兼顾了欢乐、热血与感动的，&lt;strong>反异世界题材&lt;/strong>作品。&lt;/p>
&lt;p>为什么这么说呢，因为虽然这部作品没有逃出所谓的“异世界题材”，但和那些男主莫名其妙进入异世界，然后又莫名其妙开上后宫的龙傲天剧情不同（说着说着就想起起点文，不禁感叹原来日本那边现在也流行这种么），这部作品有着一个鲜明的反传统特点，那就是：&lt;/p>
&lt;blockquote>
&lt;p>这是一个在异世界大陆的人，因为想要到现世这边来而发生的一连串的故事。&lt;/p>
&lt;/blockquote>
&lt;p>很有意思的一个切入点。&lt;/p>
&lt;h2 id="古兰德多伊尔">古兰德·多伊尔&lt;/h2>
&lt;p>被誉为“万能的天才”的，男主夏洛克·多伊尔的姐姐。&lt;/p>
&lt;p>一般来说这种天才的故事都不是什么令人轻松愉快的，古兰德自然也不例外。因为敏锐的洞察力与灵活的头脑，从小就被人利用，在王城中替国王和大臣们解决各种各样的问题。而自身为了保护好弟弟，自然也就照做了。&lt;/p>
&lt;p>古兰德是那种早已看透了世间一切的人。&lt;/p>
&lt;p>而因此产生的对自身所在世界的厌倦，使她开始追求能够到达异世界（也就是我们这边的现世）的方法。&lt;/p>
&lt;p>而这一切的想法诞生于，对“弟弟与自己是同一棵树上结下的果实”的理解，被弟弟开始追求与其他人的恋爱的事实而粉碎的结果。&lt;/p>
&lt;p>（说白了就是死弟控被弟弟给甩了233）&lt;/p>
&lt;p>决定去异世界走一遭的古兰德，在即将出发去刚刚结盟的艾伦国当王室的家庭教师的前一天晚上，留下一张“我不当古兰德·多伊尔了”的纸条后，从此消失。&lt;/p>
&lt;p>而为了避免造成外交危机，身为古兰德弟弟的夏洛克·多伊尔，自然就被腹黑外交官赫鲁姆特打扮成古兰德的样子强行带到了艾伦。&lt;/p>
&lt;h2 id="夏洛克多伊尔夏露">夏洛克·多伊尔（夏露）&lt;/h2>
&lt;p>和“万能的天才”姐姐不同，十分普通（也许失恋大王的经历算是不普通吧【笑】）的男主。&lt;/p>
&lt;p>一开始被赫鲁姆特拐到艾伦时，他是十分拒绝的。&lt;/p>
&lt;p>不仅没有姐姐拥有的知识，而且还因为女装的不习惯各种出糗。&lt;/p>
&lt;p>但是由于各种恰好好处的意外，惊险地保住了自己身为古兰德·多伊尔替身的秘密。&lt;/p>
&lt;p>而随着不断深入的与王子王女们的交往，逐渐意识到自己身为教师的责任。&lt;/p>
&lt;p>而在这之中，则尤以九岁的王女圣罗，这个和古兰德一样的天才，最为夏露所看重。&lt;/p>
&lt;h2 id="圣罗">圣罗&lt;/h2>
&lt;p>唯一知道夏露不是真正的古兰德的人。&lt;/p>
&lt;p>最初知道这件事的时候，圣罗是极其失望的。因为她希望见到“万能的天才”，并想向她请教问题。但是眼前这个假冒者，并不具有回答她这些问题的能力。&lt;/p>
&lt;p>圣罗也是人们口中的“天才”，而一般来说这种天才的故事都不是什么令人轻松愉快的。&lt;/p>
&lt;p>圣罗也是一样，因为过早地知道世间的真理而变得封闭了内心，不愿与人交往，只愿和书籍为伴。&lt;/p>
&lt;p>但圣罗也是唯一会叫夏露“夏露老师”而不是“古兰德老师”的人。&lt;/p>
&lt;p>并且在长久的羁绊中，逐渐变得开朗了起来，并意识到自己喜欢夏露的事实。&lt;/p>
&lt;p>但那时的夏露，并没有发现这一点。&lt;/p>
&lt;p>也不是说夏露是那种常见的迟钝男主，只是他单纯把圣罗对自己的爱慕，当成是青春期小孩子特有的那种“依靠”而不是“爱恋”。&lt;/p>
&lt;p>但夏露显然是搞错了。&lt;/p>
&lt;hr>
&lt;p>在和因想要到异世界未果而不惜回到过去想要改变未来的古兰德于过去的某场战争中，十七岁的圣罗降临，并帮助夏露反败为胜。&lt;/p>
&lt;p>而这之后，于古兰德一同从过去回来的夏露，因为“真正的古兰德”的出现而不得不自此停止家庭教师的职务。&lt;/p>
&lt;p>而面对自己的学生，夏露最终还是说出了“等我回到维斯多利亚，学有所成之后，再以可以独当一面的身份来艾伦”的约定。&lt;/p>
&lt;p>而过了七年，圣罗十七岁的时候，她对夏露告白了。&lt;/p>
&lt;p>在圣罗回到过去的战争去帮助过去的夏露时，夏露第一次真正意识到自己是真的喜欢圣罗的。在她回来后，二人终于成为了恋人，并在三个月后结婚。&lt;/p>
&lt;p>可喜可贺可喜可贺。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>古兰德真的是挺惨的一个人。身为天才被人利用，身为弟控被圣罗横刀夺爱，身为异世界旅者最终也没有到达我们这边的现世。&lt;/p>
&lt;p>但是，在经历了这一切之后，即使是自认为知晓了一切的古兰德也发现了：&lt;/p>
&lt;blockquote>
&lt;p>这世间真的有着太多的未知，不经历一下是不会明白的。&lt;/p>
&lt;/blockquote>
&lt;p>这也大概是野村想要表达的主题吧。&lt;/p>
&lt;p>（虽然面对赫鲁姆特热情的求婚【而且是数十次】，她依旧没有接受就是了）&lt;/p>
&lt;p>而《女装家教》比较难得的一点在于，几乎每个在书中出现的人物，野村都在最终卷中为其安排了一个结局（大多数是和某人成为伴侣）。&lt;/p>
&lt;p>王子王女们自然不在话下，即使是王城中的那些配角，也拥有了自己的梦中情人。&lt;/p>
&lt;p>也就是说，整部作品所处的世界线显得十分的完整，并没有像其他新人作家那样因为叙事不成熟而不得不放弃一些配角。&lt;/p>
&lt;p>这也体现了野村身为作家的能力，确实是不容小觑的。我很喜欢。&lt;/p>
&lt;p>整个故事也不是那种阴郁、消沉的（除了寻找古兰德的那部分），而更多在欢笑声中推进，喜欢喜剧和异世界题材的都不容错过。&lt;/p>
&lt;p>嗯……想说的就这么多吧。&lt;/p>
&lt;p>下一部小评大概会就feng社的《染成茜色的坂道》开始，把旗下的三部曲全部走一遍。&lt;/p>
&lt;p>而小说呢……把断断续续看了好几年也没看完的《乃木坂春香的秘密》完结一下好了。&lt;/p>
&lt;p>就酱。&lt;/p></description></item><item><title>同人音乐、CD与电子正版</title><link>https://tinyadapter.com/post/touhou/doujin-music-elect/</link><pubDate>Wed, 09 Aug 2017 21:12:24 +0000</pubDate><guid>https://tinyadapter.com/post/touhou/doujin-music-elect/</guid><description>&lt;img src="https://tinyadapter.com/cover/4.png" alt="Featured image of post 同人音乐、CD与电子正版" />&lt;p>前两天跟某同学讨论了件不那么有趣的事。&lt;/p>
&lt;p>事件的起因是他在沈阳的某展子上给别人看摊，偶遇了yv在那里的摊子。&lt;/p>
&lt;p>于是就跟他们聊了一下，同时也买了几张CD。&lt;/p>
&lt;p>然后呢，重点来了。&lt;/p>
&lt;p>yv在那个展子上应该是带了有几百张CD，结果最后，&lt;/p>
&lt;p>算上我那个同学，一共卖出去4个人。&lt;/p>
&lt;p>&lt;strong>没错，4个人&lt;/strong>。&lt;/p>
&lt;p>先不讨论东北地区ACG文化/同人文化的贫瘠（这点我承认，确实是不怎么样）&lt;/p>
&lt;p>但是这也“实在是太惨了”（同学原话复述）。&lt;/p>
&lt;hr>
&lt;p>而我呢，大概思考这件事情有挺长时间了。&lt;/p>
&lt;p>也不仅仅是同人圈子这样，全世界所有的音乐产业现在都有这种问题。&lt;/p>
&lt;p>简单的说就是&lt;em>信息爆炸&lt;/em>。&lt;/p>
&lt;p>现在互联网上有这么多的音乐，随手一点就可以听到，为什么我要花那么大的精力去买CD，还不能带着随处听呢？&lt;/p>
&lt;p>想想Spotify，Apple Music有多火，这种态势显然只会愈演愈烈。&lt;/p>
&lt;hr>
&lt;p>当然了，对于买CD为了收藏的人来说，一切都是伪命题。&lt;/p>
&lt;p>但不可否认的，这世上还是听音乐的人比较多。&lt;/p>
&lt;hr>
&lt;p>能想到的唯一出路，就是和那些欧美/国内的几大音乐公司一样，搞“数字化转型”。&lt;/p>
&lt;p>而鉴于国内这种&lt;em>特殊情况&lt;/em>（你懂的），我的想法就很简单了：&lt;/p>
&lt;p>做一个内容分发的大平台。&lt;/p>
&lt;p>我目前总结的，这个平台可能拥有的几种受众：&lt;/p>
&lt;ol>
&lt;li>收藏用户，这些人有没有数字版都会去买实体碟，所以需要为他们提供一个及时、完整的新作信息集散地，同时买实体版赠送电子版为那些不想拆封的人提供听歌方式。&lt;/li>
&lt;li>潜在用户I，这些人因为家里空间不足（没地方放碟），设备不足（现在笔记本没光驱）或者嫌听CD麻烦，因此几乎不会买实体版，但如果有电子正版就一定会支持自己的社团。这些是电子版的一小部分受众，需要全平台覆盖客户端保证他们随时听到自己想听的音乐。&lt;/li>
&lt;li>潜在用户II，这些人很少为了支持某个社团而去购买正版（无论电子版还是实体版），只是想简单方便地听歌，但也会拥有一定的支持正版的心理。这些是电子版的大部分受众，既需要全平台覆盖客户端，同时也要将电子版的价格保持在一定的低点（RMB10左右），以吸引客户入驻。&lt;/li>
&lt;/ol>
&lt;p>我目前思考的，这个平台需要拥有的一些特点：&lt;/p>
&lt;ul>
&lt;li>全平台覆盖客户端（包括移动客户端）&lt;/li>
&lt;li>拥有信息发布区，可以让社团宣传自己的新砖&lt;/li>
&lt;li>提供歌曲交流平台（类似网易云评论区），可以让听众之间保持互动，增强平台用户粘度&lt;/li>
&lt;/ul>
&lt;p>我目前构想的，这个平台的主要运营模式：&lt;/p>
&lt;ul>
&lt;li>主营数字版，但同时也提供实体版的网店跳转&lt;/li>
&lt;li>如果购买了实体版，可以免费获得一份数字版&lt;/li>
&lt;li>数字版价格在RMB10左右/砖，不提供下载，但可以在线播放/本地缓存，音质320K&lt;/li>
&lt;/ul>
&lt;p>同时也有两个比较基础的问题：&lt;/p>
&lt;ul>
&lt;li>怎样吸引社团入驻&lt;/li>
&lt;li>如何与监管打交道&lt;/li>
&lt;/ul>
&lt;p>大概就酱。&lt;/p>
&lt;p>有谁愿意来接这个&lt;strong>巨坑&lt;/strong>么（笑）&lt;/p></description></item><item><title>Win10“快速访问”内容合并的解决方案</title><link>https://tinyadapter.com/post/win10/win10-quickaccess-bug/</link><pubDate>Sun, 18 Jun 2017 21:54:23 +0000</pubDate><guid>https://tinyadapter.com/post/win10/win10-quickaccess-bug/</guid><description>&lt;img src="https://tinyadapter.com/cover/6.png" alt="Featured image of post Win10“快速访问”内容合并的解决方案" />&lt;p>昨晚（准确说应该是今早？）遇到了win10一个十分神奇的bug。&lt;/p>
&lt;p>大家都知道，自从win8开始微软就在文件管理器里加了一个”快速访问“的默认文件夹。这东西还是比较方便的。&lt;/p>
&lt;p>然后昨晚我开了一下家庭组（别问我为啥还要用这个马上要被微软砍掉的功能），之后再注意到的时候，“快速访问”里的”常用文件夹“和”最近使用的文件“这两个分开的组……居然合并了！&lt;/p>
&lt;p>两个分组的东西混在了一起（简单说就是没有开分组依据的普通文件夹的样子）。&lt;/p>
&lt;p>虽说没啥大的变化吧，但这样总归是没法用的。&lt;/p>
&lt;p>于是各种爬搜索，终于让我找到了这个脚本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-batch" data-lang="batch">&lt;span class="line">&lt;span class="cl">&lt;span class="p">@&lt;/span>&lt;span class="k">echo&lt;/span> off
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reg Delete &lt;span class="s2">&amp;#34;HKCU\SOFTWARE\Microsoft\Windows\Shell\BagMRU&amp;#34;&lt;/span> /F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reg Delete &lt;span class="s2">&amp;#34;HKCU\SOFTWARE\Microsoft\Windows\Shell\Bags&amp;#34;&lt;/span> /F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reg Delete &lt;span class="s2">&amp;#34;HKCU\SOFTWARE\Microsoft\Windows\ShellNoRoam\Bags&amp;#34;&lt;/span> /F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reg Delete &lt;span class="s2">&amp;#34;HKCU\SOFTWARE\Microsoft\Windows\ShellNoRoam\BagMRU&amp;#34;&lt;/span> /F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reg Delete &lt;span class="s2">&amp;#34;HKCU\SOFTWARE\Classes\Local Settings\Software\Microsoft\Windows\Shell\BagMRU&amp;#34;&lt;/span> /F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reg Delete &lt;span class="s2">&amp;#34;HKCU\SOFTWARE\Classes\Local Settings\Software\Microsoft\Windows\Shell\Bags&amp;#34;&lt;/span> /F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reg Delete &lt;span class="s2">&amp;#34;HKCU\SOFTWARE\Classes\Wow6432Node\Local Settings\Software\Microsoft\Windows\Shell\Bags&amp;#34;&lt;/span> /F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reg Delete &lt;span class="s2">&amp;#34;HKCU\SOFTWARE\Classes\Wow6432Node\Local Settings\Software\Microsoft\Windows\Shell\BagMRU&amp;#34;&lt;/span> /F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reg Delete &lt;span class="s2">&amp;#34;HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Modules\GlobalSettings\Sizer&amp;#34;&lt;/span> /F
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">taskkill /f /im explorer.exe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">start&lt;/span> explorer.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>没什么特别的，就是刷新一下与文件管理器相关的配置，就解决了。&lt;/p>
&lt;p>如果大家以后遇到这种情况，就可以用这个脚本文件恢复正常。&lt;/p>
&lt;p>PS：话说我一直都没搞懂出现这个问题的原因……难道真的是因为家庭组？（&lt;/p></description></item><item><title>《隙间樱花与谎言都市》小评</title><link>https://tinyadapter.com/post/galgame-review/sakurano/</link><pubDate>Fri, 09 Jun 2017 12:24:27 +0000</pubDate><guid>https://tinyadapter.com/post/galgame-review/sakurano/</guid><description>&lt;img src="https://tinyadapter.com/cover/5.png" alt="Featured image of post 《隙间樱花与谎言都市》小评" />&lt;p>其实我一直很纠结究竟要不要推这部来自propeller的作品。&lt;/p>
&lt;p>第一次接触到这部作品是在初中，当时打到序章后到达樱花庄的那部分的时候感觉不是很对胃口，于是就弃了。现在看来真是一大损失。&lt;/p>
&lt;p>（也许当年的我还没有成为一个萌豚（跑&lt;/p>
&lt;p>现在回过头来看，从序章开始到春日井兄妹跟随樱花庄众人进入学校这部分的剧情，确实很难说得上顺理成章，有点跟人一种强行进入故事线的唐突之感。&lt;/p>
&lt;p>不过这样一来，很少的世界观背景给了我将这部作品的剧情视作推理型的理由。怀着这种心态，我进入了樱乃——&lt;/p>
&lt;p>一个只有“骗子”才有资格进入的，樱花之海。&lt;/p>
&lt;h2 id="花珠线">花珠线&lt;/h2>
&lt;blockquote>
&lt;p>「~的市道十字路口，在等待信号灯的橘先生一家面前，山本伸也先生驾驶的轿车冲了过来。」&lt;/p>
&lt;p>「结果，妹妹橘飘小姐受重伤，意识不清。然后——父亲敬三，母亲真纪子以及姐姐花珠小姐」&lt;/p>
&lt;p>「被确认，死亡」&lt;/p>
&lt;/blockquote>
&lt;p>花珠线是一条完全对得起”推理“这两个字的线。整个故事一环扣一环，以花珠失忆后进入樱乃的背景为开端，通过逐渐找回的记忆推动剧情的发展，最终到达故事结局。&lt;/p>
&lt;p>……真的这么简单么？&lt;/p>
&lt;p>玩家在故事发展到中段时已经可以通过花珠身体的变化与男主优真的回忆片段找到蛛丝马迹，比如说从优真和花珠交往开始花珠频繁摔盘子、掉自动铅笔的那段描写中推断出来这些发生的原因是她的身体（手）变得透明（后续剧情里也被证实了），从而明确花珠是已经死亡的幽灵。&lt;/p>
&lt;p>什么你说你没看出来？没关系啊，当剧情发展到后半的时候，在公园游荡的橘飘会直接了当地告诉优真这个真相：&lt;/p>
&lt;blockquote>
&lt;p>「樱乃，这里是，连幽灵也会聚集的地方。」&lt;/p>
&lt;/blockquote>
&lt;p>玩家会顺理成章地认为花珠是因为车祸被撞死（上文引用的新闻），因为小时候答应优真参加生日party，因为车祸而死不能实现，从而说了谎，因此化身幽灵来到樱乃，而花珠的存在现在正在逐渐变得稀薄……&lt;/p>
&lt;p>嘿，那你可就结结实实地被编剧给骗了。&lt;/p>
&lt;p>当最终结局明朗时，我才震惊地发现——原来花珠不是花珠，而是“飘”。&lt;/p>
&lt;p>（以下为解释方便，带引号的均为实际的人名）&lt;/p>
&lt;blockquote>
&lt;p>车祸而死的确是是“花珠”，但却不是花珠，而是在公园四处游荡，随时出现而又迅速消失的飘。&lt;/p>
&lt;p>没错，花珠其实是妹妹“飘“，而飘其实是姐姐“花珠”。&lt;/p>
&lt;p>“飘”一直想成为”花珠“一样坚强又温柔的大姐姐，于是小时候与男主见面时谎称自己是花珠，并处处对男主展（biao）现（yan）大姐姐的感觉。&lt;/p>
&lt;p>因此，花珠的谎言并不是因为答应优真的生日party没去，而是压根就在用自己姐姐的身份与优真交往。&lt;/p>
&lt;p>而“飘”重伤后这几年在现实世界一直处于昏迷状态，与此同时“花珠“以真正的幽灵身份引导”飘“的灵魂进入了樱乃。&lt;/p>
&lt;/blockquote>
&lt;p>故事结局，花珠的灵魂回到了现实世界（医院），而飘也因为帮助花珠从自我身份欺骗的泥沼中挣脱而出，从而实现了自己的愿望，顺利成佛，优真回现实世界找到了苏醒过来的花珠。THE END。&lt;/p>
&lt;p>很不错的故事，剧本本身不长（大约四五个小时），但却满足了我对Galgame一种特定类型的剧情的全部需求：故事性、推理性、说理性。不论是优真和花珠甜甜的日常，还是花珠即将消失时的压抑与无助，抑或飘点明真相时的惊讶与反思，都不禁使人大呼过瘾。&lt;/p>
&lt;p>本来我推这部作品的动力是铃和妹妹，结果这条”非主线“却也展现了超凡的实力，让我不得不认真对待接下来的故事。&lt;/p>
&lt;p>&lt;img src="https://tinyadapter.com/post/galgame-review/sakurano/sakurano_kajyu.jpg"
width="1536"
height="864"
srcset="https://tinyadapter.com/post/galgame-review/sakurano/sakurano_kajyu_hu35f7580255a3f078eabb20d580d5f779_183881_480x0_resize_q75_box.jpg 480w, https://tinyadapter.com/post/galgame-review/sakurano/sakurano_kajyu_hu35f7580255a3f078eabb20d580d5f779_183881_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="巧可线">巧可线&lt;/h2>
&lt;blockquote>
&lt;p>「诸位，你们完全没有去做第一的必要」&lt;/p>
&lt;p>「每个人都有属于自己的个性。所以，只要找到属于自己的第一就行了」&lt;/p>
&lt;p>「喜欢的东西是什么？擅长的东西是什么？一个，只要一个就够了」&lt;/p>
&lt;p>「这个，是你这个人成形的要素，并且，这是你们最弥足珍贵的——宝物」&lt;/p>
&lt;/blockquote>
&lt;p>巧可线剧情比花珠线还短（三四个小时左右），而且人物关系也不复杂，讲述了一个死宅遇到另一个比自己还宅的死宅的故事（笑）&lt;/p>
&lt;p>剧情本身没有什么特别的地方，优真和巧可也是经历了一段莫名其妙的日常之后就互相喜欢上了对方，十分地套路。不过对于巧可能够进入樱乃的资格（也就是“谎言”），还是挺有意思的，不可不说。&lt;/p>
&lt;p>简单说，“特别”即是巧可的“谎言”。&lt;/p>
&lt;p>别看巧可在樱乃到处展现着她的活泼可爱，还拍了个子供向（？）的侦探剧《宇宙侦探巧可炭》，但其实在现实世界，她只是一个居住于普通都市家庭的，普通的女孩。&lt;/p>
&lt;p>这是一种很微妙的状态。巧可始终找不到属于自己的“特别”，&lt;/p>
&lt;p>但在优真的眼中，“她就是特别”。&lt;/p>
&lt;p>而当故事结尾，巧可因为双亲回家接她到国外两年而不得不离开樱乃，优真与她相隔两个世界的两年后，巧可回到樱乃，与在境界口等待的优真重逢。&lt;/p>
&lt;p>我很难去评判整个巧可线的故事，感觉少了一些思维碰撞，但多了一些日常与温馨。&lt;/p>
&lt;p>也许这就是“普通”吧。不过我还挺喜欢的。&lt;/p>
&lt;p>最后送上故事结局的一段话：&lt;/p>
&lt;blockquote>
&lt;p>为不知何去何从而颤抖，或许『曾存在于那里的』思春期特有的那种纠葛，会将其超越。&lt;/p>
&lt;p>——去超越它，去追逐新的目标。&lt;/p>
&lt;p>在她心之所向。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>好了，接下来就是一些比较偏重整部作品核心的两条线了：咲良与铃。&lt;/p>
&lt;p>在非主线二人的剧情中极少有针对整体世界观的阐述，大多数含沙射影的提及主要集中在共通线前段（兄妹二人刚入住樱花庄的那段时间）。目前主要的两个未说明的部分：&lt;/p>
&lt;ol>
&lt;li>优真经常做的梦&lt;/li>
&lt;li>母亲与兄妹二人之间的问题&lt;/li>
&lt;/ol>
&lt;p>虽然没有直接点明，但是二人确实是在杀死母亲之后才逃出母亲的囚禁。&lt;/p>
&lt;p>剧中有一句很简单的介绍母亲经历的话：&lt;/p>
&lt;blockquote>
&lt;p>被父亲所抛弃，作为歌手的梦想破碎，商业失败，被朋友骗走钱财，亲戚把贷款推到自己身上，被可疑的买卖所骗&lt;/p>
&lt;/blockquote>
&lt;p>OK，请开始你的表演吧！&lt;/p>
&lt;h2 id="咲良线">咲良线&lt;/h2>
&lt;blockquote>
&lt;p>「其家之景，牛马鸡犬，从未嫌多，红白之花，相继怒放」&lt;/p>
&lt;p>「纯粹的，漂亮的，总有一天会迷失的事物很多，然而比起这些，来访之人」&lt;/p>
&lt;p>「——都能找到，名为幸福的东西」&lt;/p>
&lt;/blockquote>
&lt;p>果然不枉我的推断，咲良和铃这两条线就是得放在一起看。&lt;/p>
&lt;p>其实咲良线可以看作主线中的表线，而铃线则是不折不扣的里线。&lt;/p>
&lt;p>咲良的表线并没有什么对世界观的直接交代，大多依旧处于“这里需要解释一下于是就解释一下”的状态，更多的剧情表现在兄妹二人之间”奇怪的人生探讨“以及最后咲良取回声音的过程。&lt;/p>
&lt;p>那段过程真的是很有意思而又逻辑自洽，如果可以的话我建议大家都可以推一推看看。&lt;/p>
&lt;p>简单说，就是优真拜托铃和樱花庄的大家共同给咲良编织了一个谎言。&lt;/p>
&lt;p>铃本身是没有什么外人口中的”把谎言变为现实”的能力，比起神明，应该说“更像是妖精” &amp;lt;- 铃的原话&lt;/p>
&lt;p>但是，如果她真的装作可以把谎言变为现实呢？&lt;/p>
&lt;p>其实咲良不能说话是因为心理原因。俗话说，心理问题要用心理治疗。简单说就是让她重新认为自己“能够说话”。&lt;/p>
&lt;p>而咲良一直都想让樱花庄的大家成为一家人。&lt;/p>
&lt;p>于是优真拜托樱花庄的大家演戏，装作一家人（使用家人之间的称呼与关系），说这是铃的能力，以让咲良取得对铃的信任。&lt;/p>
&lt;p>然后骗了她。&lt;/p>
&lt;p>然后咲良就开口说话了。&lt;/p>
&lt;p>（这里还有一点小细节，取回声音后，咲良的配音变得有了语调和情绪，而之前一直都是棒读。原因无它，因为那些“声音”其实都是优真的想象）&lt;/p>
&lt;p>之后优真告白，过了一点交往生活，最后时间跳到二人于樱花庄订婚。自此咲良线完结。&lt;/p>
&lt;p>……&lt;/p>
&lt;p>是不是感觉有什么不对的地方？&lt;/p>
&lt;p>推完咲良线的一段时间内我还没什么感觉，后来突然一想到还有条铃线，顿时就觉得不对劲了——&lt;/p>
&lt;blockquote>
&lt;p>如果说别的线不讲世界观是因为真的跟世界观扯不上关系，那咲良线不讲世界观又是为啥？&lt;/p>
&lt;/blockquote>
&lt;p>咲良最终取回了声音，可以算是HAPPY END，可是你共通线吊了人那么久的胃口，最后居然啥也没说？&lt;/p>
&lt;p>这不正常。&lt;/p>
&lt;p>果然最后证明，一切关于世界观背景的陈述都藏在了铃线中。&lt;/p>
&lt;p>不如说，铃线就是为了交代世界观而存在的。&lt;/p>
&lt;p>&lt;img src="https://tinyadapter.com/post/galgame-review/sakurano/sakurano_sakura.jpg"
width="1536"
height="864"
srcset="https://tinyadapter.com/post/galgame-review/sakurano/sakurano_sakura_hue34e9c010d093f47897a25333867d1f0_231795_480x0_resize_q75_box.jpg 480w, https://tinyadapter.com/post/galgame-review/sakurano/sakurano_sakura_hue34e9c010d093f47897a25333867d1f0_231795_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="铃线">铃线&lt;/h2>
&lt;blockquote>
&lt;p>这正是为了「取回」的故事。&lt;/p>
&lt;/blockquote>
&lt;p>铃线是继承了咲良线主要剧情——咲良取回声音的那部分内容，但在这件事发生之前优真其实已经多次跑到樱花树下寻找铃。&lt;/p>
&lt;p>然后呢，在与铃于樱花树下度过了一段平静的生活之后，男主的行踪被樱花庄的大家发现，并且因此把铃带回了樱花庄。&lt;/p>
&lt;p>之后又是一段樱花庄的生活。&lt;/p>
&lt;p>在这之中，优真他们重复着早起去学校的日子，而铃则是早起到处去散步。&lt;/p>
&lt;p>以上都是清水般的轻松日常。&lt;/p>
&lt;p>剧情急转直下的开始是铃的一次突然高烧。&lt;/p>
&lt;p>“妖精难道也会发烧？”&lt;/p>
&lt;p>优真在经历了到处找资料，询问治疗咲良的心理医生夕阳（她是推动各线剧情发展的关键人物，贯穿始终），最后束手无策。&lt;/p>
&lt;p>其实，这一天的到来铃自己早有预料。&lt;/p>
&lt;p>在樱花树下，优真真诚地向樱花树祈祷，希望拯救自己所爱之人。&lt;/p>
&lt;p>然后奇迹真的发生了。铃看起来从消失边缘被拯救了回来，又恢复了往常的活力。&lt;/p>
&lt;p>在二人于樱花树下完成仪式之后，优真抱起了铃，想要和她一起回到樱花庄。&lt;/p>
&lt;p>然而在这时，优真突然发现——&lt;/p>
&lt;p>&lt;strong>铃撒了谎。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>这一切都是「谎言」。&lt;/strong>&lt;/p>
&lt;p>铃根本没有好转，只是装出祈祷成功的样子。&lt;/p>
&lt;p>然后，铃就这么在优真的怀抱中，&lt;/p>
&lt;p>&lt;strong>消失了。&lt;/strong>&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>人类在好奇心的驱使下，打开了沉睡着巨大祸患的箱子。&lt;/p>
&lt;p>而那一刻，那才是，世界真正的开端。&lt;/p>
&lt;p>若是那样，即使是坏事，或许对这个世界的运转来说也是必须存在的。&lt;/p>
&lt;p>记述了空想的书本，传颂着妄想的歌谣。生物送入体内的是于己无益的，腐害自身的食物。然后——&lt;/p>
&lt;p>就好比“谎言”。&lt;/p>
&lt;p>或许，丧失了那些东西的这个世界，&lt;/p>
&lt;p>然后才不得不面临毁灭。&lt;/p>
&lt;p>——谎言，究竟是什么？&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://tinyadapter.com/post/galgame-review/sakurano/sakurano_sekai.png"
width="1536"
height="864"
srcset="https://tinyadapter.com/post/galgame-review/sakurano/sakurano_sekai_huc61351eee6773b1c6cd9ae00777f264e_984913_480x0_resize_box_3.png 480w, https://tinyadapter.com/post/galgame-review/sakurano/sakurano_sekai_huc61351eee6773b1c6cd9ae00777f264e_984913_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;p>优真做了一个梦。&lt;/p>
&lt;p>在梦中，世界已遭灭顶之灾。&lt;/p>
&lt;p>人类因为近乎偏执地追求超越肉体的能力，从而不断地消灭那些“坏的东西”。&lt;/p>
&lt;p>食物是不需要的，因为当中存在有害的物质。&lt;/p>
&lt;p>感情是不需要的，因为这会让人陷入迷惘。&lt;/p>
&lt;p>甚至于到最后，肉体也是不需要的了，于是人类变成了喝着油的机器。&lt;/p>
&lt;p>这时候人类（或者说机器）突然发现，世界大概也是不需要的了。&lt;/p>
&lt;hr>
&lt;p>铃是这个崩坏的世界最后的希望。&lt;/p>
&lt;p>铃的母亲在生下（准确地说是制作）铃的时候，刻意按照真正的人类的样子，放弃了所有的超能力，并在她心中种下了发展感情的种子——&amp;ldquo;箱子&amp;rdquo;。&lt;/p>
&lt;p>在取回“谎言”的那一刻，“箱子”就会被打开，拯救这个世界。&lt;/p>
&lt;p>优真作为铃的哥哥，实际上只是拥有人形的机器，不懂感情。&lt;/p>
&lt;p>兄妹二人在某个大楼的角落躲藏着，因为“那些机器”要铲除这个世界上“坏的东西”，显然铃符合这个要求。&lt;/p>
&lt;p>妹妹开始学习世界崩坏前的书籍，问各种问题，万事通的优真都会给予解答。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>「如果说人们忘记了感情，丧失了价值观，变成了单纯的永动机，是这个世界的『进化』的话。」&lt;/p>
&lt;p>「那么我们现在所做的事情，也许是『退化』也说不定。」&lt;/p>
&lt;/blockquote>
&lt;p>妹妹的感情越来越丰富。她开始要求走出大楼，去街上散步。&lt;/p>
&lt;p>作为打开“箱子”，拯救世界的一种捷径，虽然冒着被“那些机器”发现的危险，优真还是满足了铃的要求。&lt;/p>
&lt;p>在到处散步的过程中，铃主动开始要求和优真接吻。&lt;/p>
&lt;p>但是优真并不理解为什么，只是单纯的被动接受。&lt;/p>
&lt;p>这时，即使是无机质生物的优真也逐渐感觉到，铃拯救世界的日期，似乎越来越近了。&lt;/p>
&lt;hr>
&lt;p>“那些机器”的到来比想象中要早。&lt;/p>
&lt;p>作为没有任何能力，只是普通人类的铃的保护者，优真想尽一切办法与铃一同逃出了大楼，击退所有来犯的机器，竭尽全力保护着自己的妹妹。&lt;/p>
&lt;p>但是，对方人多势众。&lt;/p>
&lt;p>虽然溃败了机器们，但是优真自己也不堪重负，倒在黑色的“血泊”中。&lt;/p>
&lt;p>妹妹眼角的液体是什么呢？&lt;/p>
&lt;p>应该是眼泪吧。&lt;/p>
&lt;p>那么，妹妹为什么哭了呢。&lt;/p>
&lt;p>妹妹说：“哥哥没发现么，你现在正在笑着呢。”&lt;/p>
&lt;p>然后，“箱子”打开了。从中诞生了一颗巨大的，包覆世界的樱花树。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>创造了世界的谎言是，「优真的笑容」。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>在优真这个长梦结束的时候，身为神明、妖精，不，应该说妹妹的铃，主动出现在优真的面前，告诉他说，&lt;/p>
&lt;p>这个世界恐怕是不行了，但她希望在下一个世界能够将优真从这个轮回的命运中解救出来，还给他真正的笑容。&lt;/p>
&lt;p>而在铃转身前往下一个世界的时候，她的背影，竟意外地和咲良的模样重叠了起来……&lt;/p>
&lt;hr>
&lt;p>自此，整个世界观基本上明了了。&lt;/p>
&lt;p>樱乃是铃心中的“箱子”所创造的城市，作为收集“谎言”，保证世界不落入崩坏的一种方式。&lt;/p>
&lt;p>而咲良是铃的转世，作为这个世界中优真的妹妹，陪伴在他身边。&lt;/p>
&lt;p>（emmm，容我插一句，上次见到galgame里玩转世的，大概就是《樱吹雪》及其外传《花鸟风月》了，除此之外还真的不怎么常见）&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>总体来说，《隙间樱花与谎言都市》的剧情总是给我一种错觉，就是“我玩了一份游戏结果居然看了两份剧情”。&lt;/p>
&lt;p>确实，如果将全线作为两部分的话，那么铃线甚至可以说自成一段故事，和之前所有的线似乎除了基本世界观统一之外没有什么搭边的。&lt;/p>
&lt;p>虽说最后的最后铃依旧没能回来，但是优真还是能够和咲良，和樱花庄的大家一直幸福地生活，然后在下个世界，去实现未完成的救赎。&lt;/p>
&lt;p>整个剧情可以说是相当完整，虽然也有一点小BUG，不过总体还是很愉快的。&lt;/p>
&lt;p>顺带一提，整部作品的BGM我墙裂推荐，首首精品，尤其ED的《BrandNewVoice》，可以说百听不厌。&lt;/p>
&lt;p>嗯……最后说点小细节，&lt;/p>
&lt;p>也许没人注意过标题下面还有一行小字吧。&lt;/p>
&lt;p>翻译过来的意思是：&lt;/p>
&lt;blockquote>
&lt;p>世界终焉与樱花公主&lt;/p>
&lt;/blockquote></description></item><item><title>《FORTUNE ARTERIAL》小评</title><link>https://tinyadapter.com/post/galgame-review/fortune-arterial/</link><pubDate>Mon, 20 Feb 2017 13:46:10 +0000</pubDate><guid>https://tinyadapter.com/post/galgame-review/fortune-arterial/</guid><description>&lt;img src="https://tinyadapter.com/cover/1.png" alt="Featured image of post 《FORTUNE ARTERIAL》小评" />&lt;p>&lt;img src="https://tinyadapter.com/post/galgame-review/fortune-arterial/erika.jpg"
width="1002"
height="783"
srcset="https://tinyadapter.com/post/galgame-review/fortune-arterial/erika_huc3154f7b082d60502b70081627f2d932_129074_480x0_resize_q75_box.jpg 480w, https://tinyadapter.com/post/galgame-review/fortune-arterial/erika_huc3154f7b082d60502b70081627f2d932_129074_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="127"
data-flex-basis="307px"
>&lt;/p>
&lt;p>说起来，自开始推Galgame起，我就没有做过二刷这种事情。&lt;/p>
&lt;p>当然，类似《魔女的夜宴》这种强制二周目的不算在内（笑）。&lt;/p>
&lt;p>不过今次的《FORTUNE AETERIAL》，确实是如假包换的二周目。一来第一次推是在五年前，主线剧情早就已经忘干净了；二来趁着最近集中推八月社的作品，再回味一下五年前推这部作品时的感觉。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>不过，当我真正走完五个表结局+里结局之后，才发现自己当初根本就没有理解故事本身想要表达的主题。&lt;/p>
&lt;p>确实，我觉得把它当作八月社除脏翅膀外的巅峰之作也未尝不过。虽然对于动画我还是无法释怀，但作为原作的游戏的水准还是出乎了我的意料。&lt;/p>
&lt;p>不仅有让人从头笑到尾的学园日常，还有严肃紧张的情感纠葛，更有推心置腹的家人互动，让我能够一口气把整部作品通关。&lt;/p>
&lt;h2 id="表线">表线&lt;/h2>
&lt;p>虽然五条表线的篇幅都不是很长，并且悠木姐妹的两条线还几乎跟故事背景完全无关（至于为什么是几乎而不是彻底无关，接下来会提到），但作为快速表达主题和对世界观的铺垫，几条线都展现得恰到好处。&lt;/p>
&lt;blockquote>
&lt;p>悠木奏和悠木阳菜两姐妹互相对自己喜欢上男主支仓孝平的事情心知肚明，但因为六年前阳菜因为车祸而丧失了记忆（韩剧走向？），使得她和孝平之间互通信件的传统变得无法再维持下去。&lt;/p>
&lt;p>孝平一直过着随父母工作调动而到处转校的生活。七年前，他和悠木姐妹在一所学校，而一年后又再度离开。&lt;/p>
&lt;p>无数次的分别，使得男主封闭了自己的内心。而阳菜想要和他互通信件的动作，让他重拾了交朋友的信心。&lt;/p>
&lt;p>然而世事难料。&lt;/p>
&lt;p>不过七年后男主又回到了这里。&lt;/p>
&lt;p>奏与阳菜互相考虑着对方的幸福，而将孝平主动推给对方。不过在两条线的结局中，二人最终都敞开心扉，主动接纳了孝平。&lt;/p>
&lt;/blockquote>
&lt;p>至于我为什么说这段简单的友人故事跟世界观之间不是完全无关，是因为阳菜的失忆其实不是因为车祸的物理因素。&lt;/p>
&lt;p>虽然真相其实很简单，但作为普通的观众，一般是不会把这种程度的失忆和吸血鬼的能力之间划等号的。&lt;/p>
&lt;p>这也是整部作品在剧情上非常巧妙的一点——一切与常理相悖的事实总能与世界观关联起来。比起某些漏洞百出的超现实舞台下的故事，这些细节能够很好地体现出编剧在处理宏观背景上的功底。&lt;/p>
&lt;p>作为眷属的红濑桐叶与作为东仪家准当主的东仪白，同样也能起到铺垫与补充世界观的作用，并且在里线的故事走向中能够不时地让人有“原来男主跟桐叶/白在一起的时候会说某些话是因为这样”的爽快感。&lt;/p>
&lt;p>瑛里华的表线中，孝平因为去拜访瑛里华的母亲，同为吸血鬼的千堂伽耶而遭袭击，命悬一线的时刻，赶来的瑛里华让孝平喝下了她的血。于是孝平“成功地”成为了瑛里华的眷属。&lt;/p>
&lt;p>虽然作为结果来说，孝平没有死，也能和瑛里华（真正意义上的）永远在一起了，但作为瑛里华自身“不希望因为自己作为吸血鬼的自私而伤害他人”的信条，却因此粉碎得一塌糊涂。&lt;/p>
&lt;h2 id="里线">里线&lt;/h2>
&lt;p>如果说表线想要集中表达的是“朋友”，那么里线就是货真价实的“家人”。&lt;/p>
&lt;p>虽然伽耶、瑛里华、瑛里华的哥哥伊织彼此之间并没有血缘关系，但是作为家人的羁绊，依旧是存在的。&lt;/p>
&lt;p>不过，在孝平带领瑛里华真正解开他们心头的结之前，兄妹二人与母亲之间的关系确实很糟。&lt;/p>
&lt;p>整个故事因为太复杂所以就不详述了，不过却真正道出了一个发人深省的道理：&lt;/p>
&lt;blockquote>
&lt;p>只有放下彼此间的立场，推心置腹地交流，化解误会，才能取得理解与信任。&lt;/p>
&lt;/blockquote>
&lt;p>故事通篇最大的矛盾点在于，伽耶会错了她父亲在她小时候教导她“作为吸血鬼的生存方式”的本意。&lt;/p>
&lt;p>父亲让她“交友人，吸人血”，是将两者拆开来对待，一个是让她通过多交朋友排除寂寞，一个是让她吸食人血保持理性。&lt;/p>
&lt;p>作为永生的代价，每当与关系亲密的人分离时，吸血鬼的心中就会燃起把对方变为自己的眷属，从而永远在一起的黑暗想法，这时只有通过吸食人血才能抑制这股冲动。&lt;/p>
&lt;p>而伽耶显然是把两者作为因果对待了，再加上自己永远不愿面对“感情是通过自己的奋斗得来的”这一事实，从而在这250年来一直保持着小孩子般的任性胡为，对待家人也是如此。&lt;/p>
&lt;p>说起来，这种因为话语本意的错位而招致的矛盾冲突在《时钟机关的Ley-line》里也是作为故事最大的着力点。当然啦，不是说谁抄谁，只是说这种问题绝对有其在真实世界中的代表性，我们在面对周围的人时，也要尽量避免类似情况的发生。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>有一个很小的细节，我不知道编剧的安排究竟是出于什么思考：&lt;/p>
&lt;blockquote>
&lt;p>如果基于真正的血缘关系，那瑛里华其实和东仪白一样，也是东仪征一郎的妹妹。&lt;/p>
&lt;/blockquote>
&lt;p>直到故事最后，瑛里华都没有知道这个事实。&lt;/p>
&lt;p>不过，知道了又能怎样呢？&lt;/p>
&lt;p>不管怎么说，千堂家族的三人彼此间和睦相处，而困扰着瑛里华的吸血鬼身份也被伽耶摘除，能够以普通人类的身份和孝平相爱（因为红珠碎片残留在身体里的缘故所以两人的年龄较一般人来得长，但也已经不是永生），伽耶和桐叶也回到昔日好友的关系，对于一个在此背景下展开的故事已经可以算是最好的结局了。&lt;/p>
&lt;p>而故事想要表达的两个主题，我想一定会让每个观众记忆犹新。&lt;/p>
&lt;p>真是期待下一个五年呢。&lt;/p></description></item><item><title>《罪之光Rendezvous》小评</title><link>https://tinyadapter.com/post/galgame-review/rendezvous/</link><pubDate>Thu, 09 Feb 2017 00:17:18 +0000</pubDate><guid>https://tinyadapter.com/post/galgame-review/rendezvous/</guid><description>&lt;img src="https://tinyadapter.com/cover/4.png" alt="Featured image of post 《罪之光Rendezvous》小评" />&lt;p>&lt;img src="https://tinyadapter.com/post/galgame-review/rendezvous/fuuka.png"
width="1600"
height="900"
srcset="https://tinyadapter.com/post/galgame-review/rendezvous/fuuka_hu7746fa2f37fbb6fdf5f82b67e3a57130_890162_480x0_resize_box_3.png 480w, https://tinyadapter.com/post/galgame-review/rendezvous/fuuka_hu7746fa2f37fbb6fdf5f82b67e3a57130_890162_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;p>早就听闻minori社的大名，不过其作品还一个都没拜看过，对此社的了解也停留在“花了一亿日元做OP结果差点把自己搞破产”这件事上。&lt;/p>
&lt;p>（默哀一秒钟😔）&lt;/p>
&lt;p>好了继续。这次推的《罪之光Rendezvous》，总体而言还是不错的，不论是从整体剧情的把控还是氛围的营造，都能够让人唯美地享受其中。BGM加分颇多，和整体稍显平缓的叙事相辅相成，共同展现了一幅世外桃源般的古镇画卷。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>。。。。。。&lt;/p>
&lt;p>我承认，单就一开始的剧情，我的确是抱着上面的心态在推的。&lt;/p>
&lt;h2 id="剧情非剧透">剧情（非剧透）&lt;/h2>
&lt;blockquote>
&lt;p>野野村优人（男主）从出生起就从来没有离开过这个和外界只有一条隧道相通的村子。&lt;/p>
&lt;p>小时候，经营孤儿院的父亲在一场火灾中不幸丧生，当初提议并与其共同经营这家孤儿院的母亲因此遭受了村民的歧视，最终带着优人的姐姐离开了村子，将孤身一人的优人留给了他的祖母。&lt;/p>
&lt;p>而如今，祖母逝世，为其在村庄留下了一大片田地，优人便在村长的指导下共同维护着这片种着橙子的果园。&lt;/p>
&lt;p>优人有一份始终结在心头的痛楚。&lt;/p>
&lt;p>当初，在父亲被大火吞噬之后，受到巨大打击的优人看见一个和他一同玩耍，一同看连环画的女孩子手中拿着一跟点燃的红蜡烛。精神错乱的他坚持认为是那个女孩子点火烧了孤儿院，因此在祖母的影响下将她赶出了村子。&lt;/p>
&lt;p>“你犯了罪，”优人对那个女孩子说，“一生都无法偿还的罪。”&lt;/p>
&lt;p>但其实这只是优人所犯的罪。&lt;/p>
&lt;p>时间一晃而过，有一天，优人在通往外界的隧道口坐着，画着一张美人鱼的画。&lt;/p>
&lt;p>这时，从隧道的那边，一条那张画中所画的”美人鱼“，走了出来。。。&lt;/p>
&lt;p>那个女孩子叫真澄哀，从外面来到这个村子里生活，后来又转学到优人所在的班级。&lt;/p>
&lt;p>和本是青梅竹马的水园円来、突然转入的毒舌女椿风香一起，新的生活就此展开。。。&lt;/p>
&lt;/blockquote>
&lt;p>其实到这里共通线还没有开始，接下来的剧情只能说真是中二社的恶意。&lt;/p>
&lt;blockquote>
&lt;p>后来，随着交流的日渐深入，优人终于意识到，哀就是那个当初那个被自己赶出了村子的女孩子。&lt;/p>
&lt;p>交换了”罪“的两人，迅速建立了羁绊，并最终开始交往。&lt;/p>
&lt;/blockquote>
&lt;p>。。。我还一个选项没选呢，就直接进了女主线？ &amp;lt;- 当时的第一想法&lt;/p>
&lt;p>（tiny眉头一皱，发现事情绝不简单.jpg）&lt;/p>
&lt;blockquote>
&lt;p>然后男女主分了。共通线由此开始。&lt;/p>
&lt;/blockquote>
&lt;p>。。。&lt;/p>
&lt;p>可以啊中二社！&lt;/p>
&lt;h2 id="剧情剧透注意">剧情（剧透注意！）&lt;/h2>
&lt;h3 id="风香线">风香线&lt;/h3>
&lt;p>风香一开始说自己是优人的姐姐，野野村栞的朋友的时候，我是绝对不信的。尤其是&lt;/p>
&lt;ol>
&lt;li>优人总是把栞和风香的形象重叠，看见风香就想起自己姐姐&lt;/li>
&lt;li>风香说这段话的时候支支吾吾，给人一种不自然的感觉。&lt;/li>
&lt;/ol>
&lt;p>然后风香表示自己就是从栞口中听来的关于优人喜欢的事物，优人病弱的事实等等。依旧非常的不自然，起码我那时没有信。&lt;/p>
&lt;blockquote>
&lt;p>优人一直想知道栞的情况，以及为什么不是栞而是风香回到了村子。最终风香告诉了优人，栞在某次车祸中保护了风香，结果自己被车撞死。而在死之前栞的遗愿就是让风香照顾好自己的弟弟优人。栞死了，于是风香选择了模仿栞的行为，接近并照顾优人。&lt;/p>
&lt;p>这便是风香的“罪”。&lt;/p>
&lt;/blockquote>
&lt;p>看起来貌似一切都解释得通了。我在剧情走到这里的时候的确也完全相信了风香所说的，并且觉得接下来差不多就是老套的男女互相坠入爱河的剧情了。&lt;/p>
&lt;p>。。。结果TMD不是。&lt;/p>
&lt;p>风香就是栞假扮的。&lt;/p>
&lt;p>我去合着当时风香说自己身世的时候掉的眼泪都是假的了？这不科学啊。&lt;/p>
&lt;blockquote>
&lt;p>然后优人知道了风香就是姐姐的事实，与此同时风香开始疯狂地求爱。&lt;/p>
&lt;p>其实她显然是在害怕。因为这种有血缘的姐弟恋是不会被这个保守的村子接受的。&lt;/p>
&lt;p>然后优人觉得这样下去不行，主动避开了风香。&lt;/p>
&lt;p>有一天他们在废弃的铁路隧道前遇到了塌方。风香推了优人一把，自己被巨石砸中，送进了医院。&lt;/p>
&lt;p>医生说必须输血，而优人如果提供血的话，他们是血亲一事就会暴露。&lt;/p>
&lt;p>优人肯定是选择救人啦，然后他们两人最终一起离开了村子。&lt;/p>
&lt;/blockquote>
&lt;p>剧情到这里结束。&lt;/p>
&lt;p>其实没结束，两人后来有了孩子。当然这是后话。&lt;/p>
&lt;p>虽然我这样叙述剧情听起来似乎还挺简略的，但实际的氛围要比这压抑得多。基本上二人的故事线全程处于一种淡淡的感伤与忧郁之中，给人一种莫名其妙的不舒服之感。整篇故事虽然没什么特别的地方，主要的矛盾冲突也是发生在老生常谈的近亲恋爱，但在演出效果的渲染下依旧达到了不错的成效，几乎全程没有让人有“接下来一定会是这样”的套路之感。最终二人也是选择了要孩子，我不知道他们会如何走接下来的路（包括孩子的问题），但是，没人在意这些，不是么？&lt;/p>
&lt;p>所以，还是祝福一下他们吧。&lt;/p>
&lt;h3 id="円来线">円来线&lt;/h3>
&lt;p>円来线整体不算长，相比于风香线略显沉重的主题，整体较为和缓与轻松，只是在中途男女主短暂的一段分手到复合的过程中显得较为低沉。&lt;/p>
&lt;p>本篇的故事主线也十分清晰：&lt;/p>
&lt;blockquote>
&lt;p>円来是村长的女儿，而村长为其安排了一名村外的公子哥未婚夫，以得到来自公子哥所在会社的捐赠，得以重新再建一座孤儿院。&lt;/p>
&lt;p>円来十分的喜欢村子，而当时又并不理解恋爱是一种什么感受，再加上为了村子，因此答应了村长的婚事安排。&lt;/p>
&lt;/blockquote>
&lt;p>而故事前段在超展开了一下之后回归了一段比较套路的剧情：同是青梅竹马的芹香向円来告白了。&lt;/p>
&lt;p>哦忘了说，她是女的。（百合大法好！）&lt;/p>
&lt;blockquote>
&lt;p>円来在那时第一次对自己不知道恋爱的感受而慌张，拒绝了芹香的告白，并寻求优人的协助。&lt;/p>
&lt;p>于是两人开始了为期三天的模拟恋人（恋人ごっこ）。&lt;/p>
&lt;/blockquote>
&lt;p>不用想也知道，三天之后两人坠入了爱河= =&lt;/p>
&lt;blockquote>
&lt;p>这时円来开始了真正的纠结，一方面想通过建孤儿院拯救村子的少子化，另一方面又不想和优人分开。&lt;/p>
&lt;p>剧情后半，故事最大的转折点在于优人在村长的对峙过程中发现了一件关于自己父亲的事实：在大火吞噬孤儿院的一年前，来自那位公子哥的会社的捐赠停止了，从此孤儿院的运营陷入了巨大的困难。父亲甚至求助于优人的祖母，无论多少资金都行，以保证孤儿院不要解散。&lt;/p>
&lt;/blockquote>
&lt;p>其实推到这里的时候我不是太理解优人的心态为什么从此发生了巨大的转变。也许是因为父亲的行动让他知道，单纯的阻碍婚事是没有任何意义的，如果不想円来被人抢走的话，只有通过自己的努力，继承父亲的遗愿，在村子里重新建造一家孤儿院，才能迎来最终的Happy End。&lt;/p>
&lt;blockquote>
&lt;p>后来优人开始了奋斗，并同时向之前顶撞过的村长道歉，并表明了自己的决心。其实村长也不是像他们想的那样铁板一块，说实在的，比起把自己的女儿交给一个重其外表的公子哥，一个有恒心、懂奋斗、和女儿互相爱着对方的优人显然是更好的选项。&lt;/p>
&lt;p>故事的最后两个取得了保育士的资格，在村子里开了一家托儿所，并想着他们心中的梦想——经营一家孤儿院不断前行。&lt;/p>
&lt;/blockquote>
&lt;p>可喜可贺可喜可贺。&lt;/p>
&lt;h3 id="哀线">哀线&lt;/h3>
&lt;hr>
&lt;blockquote>
&lt;p>故事，果然还是悲伤的好。&lt;/p>
&lt;p>因为悲伤，所以才能让人铭记。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>其实在上面介绍剧情的时候我一直回避了一个点，就是男女主为何会在交往之后选择分手。&lt;/p>
&lt;p>啊，怎么说呢，这理由还真的是。。。只能说幸好这只是剧本，是小说，是游戏。。。随便怎么叫。总之，用简单的话来阐述男女主之间的关系，就是&lt;/p>
&lt;blockquote>
&lt;p>哀一直想要用罪（优人父亲的死，和优人将哀赶出村子）将两人连接在一起。因为这样所形成的羁绊是极其深的。&lt;/p>
&lt;p>于是，当有一天哀和优人一同回到那栋被烧毁的孤儿院的残骸时，哀手举着点燃的红蜡烛，向优人道出了一个使他震惊的事实：&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>“那天，就是我放的火。”&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>优人其实没有冤枉哀，火的确是哀放的，她认为这样才能让优人永远记住自己。这就是哀所谓的“复仇”。&lt;/p>
&lt;p>。。。这显然已经是“心理扭曲”所没法形容的了，看起来被家人抛弃，送进孤儿院这件事情对哀尚初幼小的心灵造成了极大的伤害。&lt;/p>
&lt;p>而当时的优人显然被冲击的事实给震到了，不过，他还是认为靠这种“罪”联系他人是不对的。因此意见不合的两人选择了分手。&lt;/p>
&lt;p>（嘛，我要是单把上段的最后一句话拿出来做一句话总结，那就是“意见不合结果分手”了233）&lt;/p>
&lt;p>在作为前置剧情锁的风香线和円来线中，优人选择了放弃哀，重新开始了一段新的恋情。而在哀线中，优人始终对哀死缠烂打，最终两人和好如初。&lt;/p>
&lt;p>不过，这个复合的过程嘛。。。&lt;/p>
&lt;blockquote>
&lt;p>当时，在两人分手之后的最初一段时间内，优人悲痛欲绝，跑到绘画社把之前画的那张美人鱼的画泼了红颜料。而这件事又恰好被哀看见了，因此她觉得他们之间的感情就像这幅画一样再也修复不回来了。&lt;/p>
&lt;p>而优人显然是一时冲动，后来也想方设法把画修复了回来，并以此向哀传达了“泼了颜料的话，修复回来就好了。同样的，撕裂的感情，重新修补回来就好了”这个道理。&lt;/p>
&lt;p>优人将画作为礼物送给了哀，哀也很高兴地收下了。&lt;/p>
&lt;/blockquote>
&lt;p>这件事情深刻地告诉了我们，外行在不了解行业的情况下擅自发表意见是没有好下场的（笑）&lt;/p>
&lt;p>其实我觉得这段复合得有点莫名其妙，因为优人和哀都刻意回避了导致两人分手的原因——究竟是爱，还是罪，更容易让人铭记。&lt;/p>
&lt;p>果然，接下来问题就出现了。&lt;/p>
&lt;blockquote>
&lt;p>优人仔细地思考了一下，觉得火不可能是哀放的。很简单的一个道理，如果要放火烧掉孤儿院，那完全不可能会用蜡烛去点，直接用打火机不就好了。&lt;/p>
&lt;p>同时，优人捕风捉影得获得了円来线后半所知道的关于父亲经营孤儿院困难的事情。&lt;/p>
&lt;p>这时，一个非常不好的想法同时在优人和风香心里产生：该不会，父亲其实是自己点着了孤儿院，选择逃避这个世界，并让村人承受永远的怨恨吧？&lt;/p>
&lt;p>后来真相大白，从村长口中道出的事情原委，证实了两人最坏的猜想。&lt;/p>
&lt;p>而哀知道不是自己放的火，但没想到优人父亲其实是自杀，于是邪恶的种子再度在其心中发芽：&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>故事，果然还是悲伤的好。&lt;/p>
&lt;p>因为悲伤，所以才能让人铭记。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>哀曾在优人的感化下一度放弃了自己的主张，觉得爱其实还是可以永恒的。但现在&lt;strong>マジやばくね&lt;/strong>，优人父亲站在哀那一边了，哀心中的红蜡烛又被点燃了。&lt;/p>
&lt;p>这就是优人始终没有解决的问题，于是是时候做个了结了。（自信脸）&lt;/p>
&lt;blockquote>
&lt;p>哀在同样的地方再度提出了分手。这次男主没有逃避，而是敏锐得发现了一个事实：&lt;/p>
&lt;p>哀其实很想和优人结下爱缘，但她始终在害怕，害怕哪天这种“不如罪连接的羁绊持久”的情感有一天会终结。&lt;/p>
&lt;p>于是这次轮到优人发威了。他对哀说：&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>“你没有错。错的是这个到处充满悲伤的村子。”&lt;/p>
&lt;p>“这样的话，我把这个村子烧掉就好了。”&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>优人也知道，一旦哀真的放任自己去烧村子的话，自己就会成为罪犯。但他始终坚信，哀会在自己这种行为下冲破恐惧的枷锁，好好表达自己的感情。&lt;/p>
&lt;p>终于，哀彻底地知道了自己的想法会给心爱的人造成多大的痛苦，二人终归吹灭了烛火，选择了村口隧道那头所射入的光。&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>哀一直说，爱是没办法让人铭记的。只有罪可以。&lt;/p>
&lt;p>因为自己离开村子的几年后从村口隧道走出来时，优人并没有记得她。但是对那个“自己误认为放火烧掉孤儿院的小女孩”，他却始终记得。&lt;/p>
&lt;p>但她却没有注意到，那个让优人拿起画笔，并且在这十年的时光当中，从未放下的，&lt;/p>
&lt;p>其实就是哀。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>我是一个把推Galgame当成看有声小说的人，因此对一部作品的剧情，会有最最直白的考量。&lt;/p>
&lt;p>如果说要我对这部作品的剧情做个简要的评价的话，那就是&lt;/p>
&lt;blockquote>
&lt;p>有小感动，有小平和，但通篇的主线让人觉得莫名其妙&lt;/p>
&lt;/blockquote>
&lt;p>其实作品在其他地方真的很卖力，比如说动态背景啊，极为丰富的CG啊，H Scene表演的卖力啊（捂脸），&lt;/p>
&lt;p>但可惜，我不是说对这些东西不关心，但还是剧情，是最为我所追崇的first point.&lt;/p>
&lt;p>《罪之光》想要传递的中心思想极其简单：从科学和人性的层面来说，人们都喜欢悲剧，但爱依旧还是永恒的话题。&lt;/p>
&lt;p>但，minori显然用了一种极其不简单，甚至可以说有些别扭的方式，去把这件事情讲出来。&lt;/p>
&lt;p>说不定，比起大开大合的哀线剧情，我更喜欢円来线那种简单、平和的叙述方式，娓娓道来。&lt;/p>
&lt;p>对于不像我这种对剧本偏执到爆炸的人来说，这部作品还是比较有吸引力的。音乐很好听，画面很柔美，小村的氛围渲染得也很到位。&lt;/p>
&lt;p>But，如果很不幸你跟我一样，是个剧情first的人的话，对于这部有将近8G大小的巨型Gal，那我只能说，&lt;/p>
&lt;p>&lt;strong>我不推荐。&lt;/strong>&lt;/p></description></item><item><title>“Galgame小评”板块开启</title><link>https://tinyadapter.com/post/galgame-review/galgame-review-block-opened/</link><pubDate>Wed, 08 Feb 2017 23:32:55 +0000</pubDate><guid>https://tinyadapter.com/post/galgame-review/galgame-review-block-opened/</guid><description>&lt;img src="https://tinyadapter.com/cover/2.png" alt="Featured image of post “Galgame小评”板块开启" />&lt;h3 id="说在前面的话">说在前面的话&lt;/h3>
&lt;p>时隔四年，终于又开了这个“Galgame小评”板块。&lt;/p>
&lt;p>为什么要说又呢，是因为四年前断断续续地写（chao）过一些Galgame评测的文章，至今依旧躺在QQ空间里。&lt;/p>
&lt;p>没错，是QQ空间。。。&lt;/p>
&lt;p>嘛，说起来自己推Gal的时间真是够长的了，没办法，我就是这么个喜欢听故事的人，嗯。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h3 id="具体想法">具体想法&lt;/h3>
&lt;p>这里会不定期连载一些对自己推过的Gal的看法和评价。&lt;/p>
&lt;p>说是评价，其实也就是一些自己在推Gal的过程中对于某段剧情走向自己当时产生的想法和思考。&lt;/p>
&lt;p>同时，因为自己也在编一些游戏用的BGM，因此对音乐这部分也会涉及一点。&lt;/p>
&lt;p>具体来说，就是剧情+音乐方面的感受，其他诸如人设啊系统啊什么的如果没什么提的必要就不谈了。&lt;/p>
&lt;h3 id="关于剧透">关于剧透&lt;/h3>
&lt;p>既然要写Galgame评测，一个逃不开的话题就是剧透。&lt;/p>
&lt;p>我对剧透的看法是，如果一定有必要的话，需要在剧透前进行警告，并说明程度。&lt;/p>
&lt;p>因此，本人所写的小评会将整篇文章分为“不剧透或少量剧透开端剧情”和“含剧透”两个部分。&lt;/p>
&lt;p>对于没有玩过原作的朋友，看前一个部分就可以了。&lt;/p>
&lt;hr>
&lt;p>想说的差不多都说完了，じゃ、始まるぞ！&lt;/p></description></item><item><title>Archives</title><link>https://tinyadapter.com/page/archives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tinyadapter.com/page/archives/</guid><description/></item><item><title>Search</title><link>https://tinyadapter.com/page/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tinyadapter.com/page/search/</guid><description/></item></channel></rss>